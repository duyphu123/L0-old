{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\src\\\\app\\\\views\\\\Employees\\\\index.jsx\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"i18n\";\nimport { Grid, InputLabel, FormControl, MenuItem, Select } from \"@material-ui/core\";\nexport default function FormDialog(props) {\n  var _this = this;\n\n  var handleClose = props.handleClose,\n      item = props.item;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      listProvince = _useState2[0],\n      setListProvince = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listCommune = _useState4[0],\n      setListCommune = _useState4[1];\n\n  var _useState5 = useState(item === null || item === void 0 ? void 0 : item.name),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(item === null || item === void 0 ? void 0 : item.age),\n      _useState8 = _slicedToArray(_useState7, 2),\n      age = _useState8[0],\n      setAge = _useState8[1];\n\n  var _useState9 = useState(item === null || item === void 0 ? void 0 : item.email),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      setEmail = _useState10[1];\n\n  var _useState11 = useState(item === null || item === void 0 ? void 0 : item.code),\n      _useState12 = _slicedToArray(_useState11, 2),\n      code = _useState12[0],\n      setCode = _useState12[1];\n\n  var _useState13 = useState(item === null || item === void 0 ? void 0 : item.phone),\n      _useState14 = _slicedToArray(_useState13, 2),\n      phone = _useState14[0],\n      setPhone = _useState14[1];\n\n  var _useState15 = useState({\n    province: {},\n    district: {},\n    commune: {},\n    districtsByProvince: [],\n    communesByDistrict: []\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      address = _useState16[0],\n      setAddress = _useState16[1];\n\n  var handleChange = function handleChange(e) {\n    if (e.target.name === \"province\") {\n      setAddress(_objectSpread({}, address, {\n        province: e.target.value,\n        district: {},\n        commune: {},\n        districtsByProvince: [],\n        communesByDistrict: []\n      }));\n    }\n\n    if (e.target.name === \"district\") {\n      var list = listCommune.filter(function (commune) {\n        return commune.district.name == e.target.value.name;\n      });\n      setAddress(_objectSpread({}, address, {\n        district: e.target.value,\n        commune: {},\n        communesByDistrict: list\n      }));\n    }\n\n    if (e.target.name === \"commune\") {\n      setAddress(_objectSpread({}, address, {\n        commune: e.target.value\n      }));\n    }\n  };\n\n  var _useTranslation = useTranslation(\"translation\"),\n      t = _useTranslation.t; // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n\n\n  useEffect(function () {\n    function fetchAPIProvinces() {\n      return _fetchAPIProvinces.apply(this, arguments);\n    }\n\n    function _fetchAPIProvinces() {\n      _fetchAPIProvinces = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, responseJSON, listProvince;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://training-api.oceantech.com.vn/cms/provinces/search\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    name: \"\"\n                  })\n                });\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                responseJSON = _context.sent;\n                listProvince = responseJSON;\n                console.log(listProvince); // const data2 = listProvince.map((record) => {\n                //   return {\n                //     id: record.id,\n                //     name: record.name,\n                //   };\n                // });\n                // console.log(data2);\n\n                setListProvince(listProvince);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchAPIProvinces.apply(this, arguments);\n    }\n\n    fetchAPIProvinces();\n  }, []);\n  useEffect(function () {\n    function fetchAPICommune() {\n      return _fetchAPICommune.apply(this, arguments);\n    }\n\n    function _fetchAPICommune() {\n      _fetchAPICommune = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var response, responseJSON, listCommune;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"http://training-api.oceantech.com.vn/cms/communes/search\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    name: \"\"\n                  })\n                });\n\n              case 2:\n                response = _context2.sent;\n                _context2.next = 5;\n                return response.json();\n\n              case 5:\n                responseJSON = _context2.sent;\n                listCommune = responseJSON;\n                console.log(listProvince); // const data2 = data.map((record) => {\n                //   return {\n                //     name: record.name,\n                //   };\n                // });\n                // console.log(data2);\n\n                setListCommune(listCommune);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _fetchAPICommune.apply(this, arguments);\n    }\n\n    fetchAPICommune();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \"Subscribe\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, [listProvince].map(function (province) {\n    console.log(listProvince.data);\n    return;\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"H\\u1ECD V\\xE0 T\\xEAn\",\n    type: \"email\",\n    fullWidth: true,\n    value: name ? name : \"\",\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Tu\\u1ED5i\",\n    type: \"email\",\n    fullWidth: true,\n    value: age ? age : \"\",\n    onChange: function onChange(e) {\n      return setAge(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Email\",\n    type: \"email\",\n    fullWidth: true,\n    value: email ? email : \"\",\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Code\",\n    type: \"email\",\n    fullWidth: true,\n    value: code ? code : \"\",\n    onChange: function onChange(e) {\n      return setCode(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Phone\",\n    type: \"email\",\n    fullWidth: true,\n    value: phone ? phone : \"\",\n    onChange: function onChange(e) {\n      return setPhone(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: \"mb-16\",\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"province-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 18\n    }\n  }, t(\"user.province\"))), /*#__PURE__*/React.createElement(Select, {\n    value: JSON.stringify(address.province) === JSON.stringify({}) ? null : address.province,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    inputProps: {\n      name: \"province\",\n      id: \"province-simple\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, [listProvince].map(function (province) {\n    var _province$data, _province$data2;\n\n    console.log(listProvince.data);\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: (_province$data = province.data) === null || _province$data === void 0 ? void 0 : _province$data.id,\n      value: province,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, (_province$data2 = province.data) === null || _province$data2 === void 0 ? void 0 : _province$data2.name);\n  }))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, \"Subscribe\"))));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/L0-old/src/app/views/Employees/index.jsx"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ValidatorForm","TextValidator","useState","useEffect","useTranslation","i18n","Grid","InputLabel","FormControl","MenuItem","Select","FormDialog","props","handleClose","item","open","setOpen","listProvince","setListProvince","listCommune","setListCommune","name","setName","age","setAge","email","setEmail","code","setCode","phone","setPhone","province","district","commune","districtsByProvince","communesByDistrict","address","setAddress","handleChange","e","target","value","list","filter","t","fetchAPIProvinces","fetch","method","headers","body","JSON","stringify","response","json","responseJSON","console","log","fetchAPICommune","map","data","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"i18n\";\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nexport default function FormDialog(props) {\r\n  const { handleClose, item } = props;\r\n  const [open, setOpen] = React.useState(true);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listCommune, setListCommune] = useState([]);\r\n\r\n  const [name, setName] = useState(item?.name);\r\n  const [age, setAge] = useState(item?.age);\r\n  const [email, setEmail] = useState(item?.email);\r\n  const [code, setCode] = useState(item?.code);\r\n  const [phone, setPhone] = useState(item?.phone);\r\n\r\n  const [address, setAddress] = useState({\r\n    province: {},\r\n    district: {},\r\n    commune: {},\r\n    districtsByProvince: [],\r\n    communesByDistrict: [],\r\n  });\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"province\") {\r\n      setAddress({\r\n        ...address,\r\n        province: e.target.value,\r\n        district: {},\r\n        commune: {},\r\n        districtsByProvince: [],\r\n        communesByDistrict: [],\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"district\") {\r\n      const list = listCommune.filter(\r\n        (commune) => commune.district.name == e.target.value.name\r\n      );\r\n      setAddress({\r\n        ...address,\r\n        district: e.target.value,\r\n        commune: {},\r\n        communesByDistrict: list,\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"commune\") {\r\n      setAddress({\r\n        ...address,\r\n        commune: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation(\"translation\");\r\n  // const handleClickOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n  useEffect(() => {\r\n    async function fetchAPIProvinces() {\r\n      const response = await fetch(\r\n        \"http://training-api.oceantech.com.vn/cms/provinces/search\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ name: \"\" }),\r\n        }\r\n      );\r\n      const responseJSON = await response.json();\r\n      const listProvince = responseJSON;\r\n      console.log(listProvince);\r\n      // const data2 = listProvince.map((record) => {\r\n      //   return {\r\n      //     id: record.id,\r\n      //     name: record.name,\r\n      //   };\r\n      // });\r\n      // console.log(data2);\r\n      setListProvince(listProvince);\r\n    }\r\n    fetchAPIProvinces();\r\n  }, []);\r\n  useEffect(() => {\r\n    async function fetchAPICommune() {\r\n      const response = await fetch(\r\n        \"http://training-api.oceantech.com.vn/cms/communes/search\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ name: \"\" }),\r\n        }\r\n      );\r\n      const responseJSON = await response.json();\r\n      const listCommune = responseJSON;\r\n      console.log(listProvince);\r\n      // const data2 = data.map((record) => {\r\n      //   return {\r\n      //     name: record.name,\r\n      //   };\r\n      // });\r\n      // console.log(data2);\r\n      setListCommune(listCommune);\r\n    }\r\n    fetchAPICommune();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button> */}\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {[listProvince].map((province) => {\r\n              console.log(listProvince.data);\r\n              return \r\n              \r\n            })}\r\n          </DialogContentText>\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Họ Và Tên\"\r\n              type=\"email\"\r\n              fullWidth\r\n              value={name ? name : \"\"}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Tuổi\"\r\n              type=\"email\"\r\n              fullWidth\r\n              value={age ? age : \"\"}\r\n              onChange={(e) => setAge(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              fullWidth\r\n              value={email ? email : \"\"}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Code\"\r\n              type=\"email\"\r\n              fullWidth\r\n              value={code ? code : \"\"}\r\n              onChange={(e) => setCode(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Phone\"\r\n              type=\"email\"\r\n              fullWidth\r\n              value={phone ? phone : \"\"}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <FormControl\r\n              className=\"mb-16\"\r\n              fullWidth={true}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            >\r\n              <InputLabel htmlFor=\"province-simple\">\r\n                {<span className=\"font\">{t(\"user.province\")}</span>}\r\n              </InputLabel>\r\n              <Select\r\n                value={\r\n                  JSON.stringify(address.province) === JSON.stringify({})\r\n                    ? null\r\n                    : address.province\r\n                }\r\n                onChange={(e) => handleChange(e)}\r\n                inputProps={{\r\n                  name: \"province\",\r\n                  id: \"province-simple\",\r\n                }}\r\n              >\r\n                {[listProvince].map((province) => {\r\n                  console.log(listProvince.data);\r\n                  return (\r\n                    <MenuItem key={province.data?.id} value={province}>\r\n                      {province.data?.name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}