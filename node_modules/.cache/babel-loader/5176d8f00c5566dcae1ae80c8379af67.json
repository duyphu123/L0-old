{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Employee\\\\Employee.jsx\";\nimport React, { Component } from \"react\"; // import Autocomplete from \"@material-ui/lab/Autocomplete\";\n// import TextField from \"@material-ui/core/TextField\";\n\nimport { Grid, IconButton, Icon, TablePagination // Autocomplete,\n, Button, ButtonGroup // TextField,\n, InputAdornment, Input } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { findUserByUserName, searchByPage, getItemById, getListHealthOrgByUser, SearchUserByUserName, searchByDto } from \"./EmployeeService\";\nimport UserEditorDialog from \"./EmployeeEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport shortid from \"shortid\";\nimport { saveAs } from \"file-saver\";\nimport axios from \"axios\";\nimport { Delete, Satellite } from \"@material-ui/icons\";\nimport DeleteIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\"; // function MaterialButton(props) {\n//   const { t, i18n } = useTranslation();\n//   const item = props.item;\n//   return (\n//     <div>\n//       <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\n//         <Icon fontSize=\"small\" color=\"primary\">\n//           edit1111\n//         </Icon>\n//       </IconButton>\n//       {/* <IconButton onClick={() => props.onSelect(item, 1)}>\n//       <Icon color=\"error\">delete</Icon>\n//     </IconButton> */}\n//     </div>\n//   );\n// }\n\nvar Employee = /*#__PURE__*/function (_Component) {\n  _inherits(Employee, _Component);\n\n  function Employee(props) {\n    var _this;\n\n    _classCallCheck(this, Employee);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Employee).call(this, props)); // const rows = [\n    //   { id: 1, col1: \"Hello\", col2: \"World\" },\n    //   { id: 2, col1: \"X\", col2: \"World2\" },\n    //   { id: 3, col1: \"Y\", col2: \"World3\" },\n    // ];\n\n    _this.state = {\n      keyword: \"\",\n      rowsPerPage: 10,\n      page: 0,\n      eQAHealthOrgType: [],\n      item: {},\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectAllItem: false,\n      selectedList: [],\n      totalElements: 0,\n      shouldOpenConfirmationDeleteAllDialog: false,\n      dataauto: [{\n        year: 2020,\n        name: \"Lop 11\"\n      }, {\n        year: 2021,\n        name: \"Lop12\"\n      }],\n      selectedClass: \"\"\n    };\n    _this.numSelected = 0;\n    _this.rowCount = 0;\n\n    _this.getData = function () {\n      console.log(\"getData\");\n      fetch(\"http://training-api.oceantech.com.vn/cms/employees/search\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: \"\",\n          phone: \"\",\n          age: \"\",\n          email: \"\"\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (results) {\n        console.log(\"result\", results.data);\n        var id = 1;\n        var a = /*#__PURE__*/React.createElement(DeleteIcon, {\n          onClick: function onClick() {\n            return _this.DeleteRow(id);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 19\n          }\n        });\n        var dataWithId = results.data.map(function (record) {\n          // Object.assign({},{name:record.name},{id:id++})\n          return {\n            name: record.name,\n            email: record.email,\n            age: record.age,\n            phone: record.phone,\n            actions: a,\n            id: id++\n          };\n        });\n\n        _this.setState({\n          rows: dataWithId\n        });\n      }, function (error) {\n        console.log(\"error\", error);\n      });\n    };\n\n    _this.getData2 = function () {\n      console.log(\"getData\");\n      fetch(\"http://training-api.oceantech.com.vn/cms/employees\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: \"a\",\n          phone: \"1\",\n          age: \"1\",\n          email: \"a\"\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (results2) {\n        console.log(\"result2\", results2);\n        return {\n          results2: results2\n        }; // this.setState({ rows: results });\n      }, function (error) {\n        console.log(\"error\", error);\n      });\n    };\n\n    var columns = [{\n      title: \"Họ Và Tên\",\n      field: \"name\",\n      headerName: \"name\",\n      width: 150\n    }, {\n      title: \"Số Điện Thoại\",\n      field: \"phone\",\n      headerName: \"Country\",\n      width: 150\n    }, {\n      title: \"Tuổi\",\n      field: \"age\",\n      headerName: \"age\",\n      width: 1500\n    }, {\n      title: \"Email\",\n      field: \"email\",\n      headerName: \"email\",\n      width: 150\n    }, {\n      title: \"ID\",\n      field: \"id\",\n      headerName: \"id\",\n      width: 150\n    }, {\n      title: \"Actions\",\n      field: \"actions\",\n      headerName: \"actions\",\n      width: 150,\n      renderCell: function renderCell(params) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            cursor: \"pointer\",\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(EditIcon, {\n          style: {\n            marginRight: 10\n          },\n          onClick: function onClick() {\n            return _this.editRow(params.value);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(DeleteIcon, {\n          onClick: function onClick() {\n            return _this.deleteRow(params.value);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }\n        }));\n      }\n    }];\n    _this.state = {\n      rows: [],\n      columns: columns\n    };\n    return _this;\n  } // updatePageData = () => {\n  //   var searchObject = {};\n  //   //searchObject.text = this.state.keyword;\n  //   searchObject.text = this.state.keyword.trim();\n  //   searchObject.pageIndex = this.state.page + 1;\n  //   searchObject.pageSize = this.state.rowsPerPage;\n  //   searchByPage(searchObject.pageIndex, searchObject.pageSize).then(\n  //     ({ data }) => {\n  //       this.setState({\n  //         itemList: [],\n  //         totalElements: data.totalElements,\n  //       });\n  //     }\n  //   );\n  // };\n  // static getDerivedStateFromProps(rows){\n  //   console.log(rows);\n  //   if (rows){\n  //     rows.actions=\"testt\"\n  //     return {newRows:rows}\n  //   }\n  // }\n\n\n  _createClass(Employee, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(props) {\n      // this.updatePageData();\n      this.getData(); // console.log(props.rows)\n    } // deleteRow = (event) => {\n    //   console.log(\"delete\", event);\n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          totalElements = _this$state.totalElements,\n          itemList = _this$state.itemList,\n          item = _this$state.item,\n          shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n          shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog,\n          shouldOpenConfirmationDeleteAllDialog = _this$state.shouldOpenConfirmationDeleteAllDialog;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 5,\n        md: 5,\n        sm: 5,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this2.handleEditItem({\n            startDate: new Date(),\n            endDate: new Date(),\n            isAddNew: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }\n      }, t(\"Add\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t(\"List\") // data={itemList}\n        ,\n        data: this.state.rows,\n        columns: this.state.columns // parentChildData={(row, rows) => {\n        //   var list = rows.find((a) => a.id === row.parentId);\n        //   return list;\n        // }}\n        ,\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 35\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this2.data = rows;\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\"\n            };\n          },\n          maxBodyHeight: \"450px\",\n          minBodyHeight: \"370px\",\n          headerStyle: {\n            backgroundColor: \"#358600\",\n            color: \"#fff\"\n          },\n          padding: \"dense\",\n          toolbar: false\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25, 50, 100],\n        component: \"div\",\n        labelRowsPerPage: t(\"general.rows_per_page\"),\n        labelDisplayedRows: function labelDisplayedRows(_ref) {\n          var from = _ref.from,\n              to = _ref.to,\n              count = _ref.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t(\"general.of\"), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: totalElements,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Employee;\n}(Component);\n\nexport default Employee; // handleTextChange = (event) => {\n//   this.setState({ keyword: event.target.value }, function () {});\n// };\n// handleKeyDownEnterSearch = (e) => {\n//   if (e.key === \"Enter\") {\n//     this.search();\n//   }\n// };\n// setPage = (page) => {\n//   this.setState({ page }, function () {\n//     this.updatePageData();\n//   });\n// };\n// setRowsPerPage = (event) => {\n//   this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\n//     this.updatePageData();\n//   });\n// };\n// handleChangePage = (event, newPage) => {\n//   this.setPage(newPage);\n// };\n// search() {\n//   this.setState({ page: 0 }, () => {\n//     var searchObject = {};\n//     searchObject.text = this.state.keyword.trim();\n//     searchObject.pageIndex = this.state.page + 1;\n//     searchObject.pageSize = this.state.rowsPerPage;\n//     searchByPage(searchObject.pageIndex, searchObject.pageSize).then(\n//       ({ data }) => {\n//         this.setState({\n//           itemList: [...data.content],\n//           totalElements: data.totalElements,\n//         });\n//       }\n//     );\n//   });\n// }\n// handleDownload = () => {\n//   var blob = new Blob([\"Hello, world!\"], {\n//     type: \"text/plain;charset=utf-8\",\n//   });\n//   saveAs(blob, \"hello world.txt\");\n// };\n// handleDialogClose = () => {\n//   this.setState({\n//     shouldOpenEditorDialog: false,\n//     shouldOpenConfirmationDialog: false,\n//     shouldOpenConfirmationDeleteAllDialog: false,\n//   });\n//   this.setPage(0);\n// };\n// handleOKEditClose = () => {\n//   this.setState({\n//     shouldOpenEditorDialog: false,\n//     shouldOpenConfirmationDialog: false,\n//   });\n//   this.updatePageData();\n// };\n// handleDeleteUser = (id) => {\n//   this.setState({\n//     id,\n//     shouldOpenConfirmationDialog: true,\n//   });\n// };\n// handleEditUser = (item) => {\n//   getItemById(item.id).then((result) => {\n//     this.setState({\n//       item: result.data,\n//       shouldOpenEditorDialog: true,\n//     });\n//   });\n// };\n// handleEditItem = (item) => {\n//   this.setState({\n//     item: item,\n//     shouldOpenEditorDialog: true,\n//   });\n// };\n// handleDelete = (id) => {\n//   this.setState({\n//     id,\n//     shouldOpenConfirmationDialog: true,\n//   });\n// };\n// handleDeleteAll = (event) => {\n//   this.handleDeleteList(this.data).then(() => {\n//     this.updatePageData();\n//     this.handleDialogClose();\n//   });\n// };","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/ThucTap/client/src/app/views/Employee/Employee.jsx"],"names":["React","Component","Grid","IconButton","Icon","TablePagination","Button","ButtonGroup","InputAdornment","Input","Link","SearchIcon","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","findUserByUserName","searchByPage","getItemById","getListHealthOrgByUser","SearchUserByUserName","searchByDto","UserEditorDialog","Breadcrumb","ConfirmationDialog","useTranslation","withTranslation","Trans","shortid","saveAs","axios","Delete","Satellite","DeleteIcon","EditIcon","Employee","props","state","keyword","rowsPerPage","page","eQAHealthOrgType","item","shouldOpenEditorDialog","shouldOpenConfirmationDialog","selectAllItem","selectedList","totalElements","shouldOpenConfirmationDeleteAllDialog","dataauto","year","name","selectedClass","numSelected","rowCount","getData","console","log","fetch","method","headers","body","JSON","stringify","phone","age","email","then","res","json","results","data","id","a","DeleteRow","dataWithId","map","record","actions","setState","rows","error","getData2","results2","columns","title","field","headerName","width","renderCell","params","cursor","display","justifyContent","marginRight","editRow","value","deleteRow","t","i18n","itemList","handleEditItem","startDate","Date","endDate","isAddNew","Toolbar","selection","actionsColumnIndex","paging","search","rowStyle","rowData","index","backgroundColor","maxBodyHeight","minBodyHeight","headerStyle","color","padding","toolbar","emptyDataSourceMessage","from","to","count","handleChangePage","setRowsPerPage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n// import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Icon,\r\n  TablePagination,\r\n  // Autocomplete,\r\n  Button,\r\n  ButtonGroup,\r\n  // TextField,\r\n  InputAdornment,\r\n  Input,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader,\r\n} from \"material-table\";\r\nimport {\r\n  findUserByUserName,\r\n  searchByPage,\r\n  getItemById,\r\n  getListHealthOrgByUser,\r\n  SearchUserByUserName,\r\n  searchByDto,\r\n} from \"./EmployeeService\";\r\nimport UserEditorDialog from \"./EmployeeEditorDialog\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\nimport shortid from \"shortid\";\r\nimport { saveAs } from \"file-saver\";\r\nimport axios from \"axios\";\r\nimport { Delete, Satellite } from \"@material-ui/icons\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n// function MaterialButton(props) {\r\n//   const { t, i18n } = useTranslation();\r\n//   const item = props.item;\r\n//   return (\r\n//     <div>\r\n//       <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\r\n//         <Icon fontSize=\"small\" color=\"primary\">\r\n//           edit1111\r\n//         </Icon>\r\n//       </IconButton>\r\n//       {/* <IconButton onClick={() => props.onSelect(item, 1)}>\r\n//       <Icon color=\"error\">delete</Icon>\r\n//     </IconButton> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nclass Employee extends Component {\r\n  state = {\r\n    keyword: \"\",\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    eQAHealthOrgType: [],\r\n    item: {},\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    selectAllItem: false,\r\n    selectedList: [],\r\n    totalElements: 0,\r\n    shouldOpenConfirmationDeleteAllDialog: false,\r\n    dataauto: [\r\n      { year: 2020, name: \"Lop 11\" },\r\n      { year: 2021, name: \"Lop12\" },\r\n    ],\r\n    selectedClass: \"\",\r\n  };\r\n  numSelected = 0;\r\n  rowCount = 0;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // const rows = [\r\n    //   { id: 1, col1: \"Hello\", col2: \"World\" },\r\n    //   { id: 2, col1: \"X\", col2: \"World2\" },\r\n    //   { id: 3, col1: \"Y\", col2: \"World3\" },\r\n    // ];\r\n    const columns = [\r\n      { title: \"Họ Và Tên\", field: \"name\", headerName: \"name\", width: 150 },\r\n      {\r\n        title: \"Số Điện Thoại\",\r\n        field: \"phone\",\r\n        headerName: \"Country\",\r\n        width: 150,\r\n      },\r\n      { title: \"Tuổi\", field: \"age\", headerName: \"age\", width: 1500 },\r\n      { title: \"Email\", field: \"email\", headerName: \"email\", width: 150 },\r\n      { title: \"ID\", field: \"id\", headerName: \"id\", width: 150 },\r\n      {\r\n        title: \"Actions\",\r\n        field: \"actions\",\r\n        headerName: \"actions\",\r\n        width: 150,\r\n        renderCell: (params) => (\r\n          <div\r\n            style={{\r\n              cursor: \"pointer\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <EditIcon\r\n              style={{ marginRight: 10 }}\r\n              onClick={() => this.editRow(params.value)}\r\n            />\r\n            <DeleteIcon onClick={() => this.deleteRow(params.value)} />\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    this.state = { rows: [], columns: columns };\r\n  }\r\n  // updatePageData = () => {\r\n  //   var searchObject = {};\r\n  //   //searchObject.text = this.state.keyword;\r\n  //   searchObject.text = this.state.keyword.trim();\r\n  //   searchObject.pageIndex = this.state.page + 1;\r\n  //   searchObject.pageSize = this.state.rowsPerPage;\r\n\r\n  //   searchByPage(searchObject.pageIndex, searchObject.pageSize).then(\r\n  //     ({ data }) => {\r\n  //       this.setState({\r\n  //         itemList: [],\r\n  //         totalElements: data.totalElements,\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // };\r\n  // static getDerivedStateFromProps(rows){\r\n  //   console.log(rows);\r\n\r\n  //   if (rows){\r\n  //     rows.actions=\"testt\"\r\n  //     return {newRows:rows}\r\n  //   }\r\n  // }\r\n  componentDidMount(props) {\r\n    // this.updatePageData();\r\n\r\n    this.getData();\r\n    // console.log(props.rows)\r\n  }\r\n  // deleteRow = (event) => {\r\n  //   console.log(\"delete\", event);\r\n  // };\r\n\r\n  getData = () => {\r\n    console.log(\"getData\");\r\n    fetch(\"http://training-api.oceantech.com.vn/cms/employees/search\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name: \"\", phone: \"\", age: \"\", email: \"\" }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (results) => {\r\n          console.log(\"result\", results.data);\r\n          let id = 1;\r\n          let a = <DeleteIcon onClick={() => this.DeleteRow(id)} />;\r\n      \r\n          const dataWithId = results.data.map((record) => {\r\n            // Object.assign({},{name:record.name},{id:id++})\r\n            return {\r\n              name: record.name,\r\n              email: record.email,\r\n              age: record.age,\r\n              phone: record.phone,\r\n              actions: a,\r\n              id: id++,\r\n            };\r\n          });\r\n\r\n          this.setState({ rows: dataWithId });\r\n        },\r\n        (error) => {\r\n          console.log(\"error\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  getData2 = () => {\r\n    console.log(\"getData\");\r\n    fetch(\"http://training-api.oceantech.com.vn/cms/employees\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name: \"a\", phone: \"1\", age: \"1\", email: \"a\" }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (results2) => {\r\n          console.log(\"result2\", results2);\r\n\r\n          return {\r\n            results2,\r\n          };\r\n\r\n          // this.setState({ rows: results });\r\n        },\r\n        (error) => {\r\n          console.log(\"error\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let {\r\n      keyword,\r\n      rowsPerPage,\r\n      page,\r\n      totalElements,\r\n      itemList,\r\n      item,\r\n      shouldOpenConfirmationDialog,\r\n      shouldOpenEditorDialog,\r\n      shouldOpenConfirmationDeleteAllDialog,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        {/* <div className=\"mb-sm-30\">\r\n          <Breadcrumb\r\n            routeSegments={[\r\n              { name: t(\"Dashboard.manage\"), path: \"/directory/apartment\" },\r\n              { name: t(\"user.title\") },\r\n            ]}\r\n          />\r\n        </div> */}\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={5} md={5} sm={5} xs={12}>\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.handleEditItem({\r\n                  startDate: new Date(),\r\n                  endDate: new Date(),\r\n                  isAddNew: true,\r\n                });\r\n              }}\r\n            >\r\n              {t(\"Add\")}\r\n            </Button>\r\n\r\n            {/* {shouldOpenConfirmationDeleteAllDialog && (\r\n              <ConfirmationDialog\r\n                open={shouldOpenConfirmationDeleteAllDialog}\r\n                onConfirmDialogClose={this.handleDialogClose}\r\n                onYesClick={this.handleDeleteAll}\r\n                text={t('DeleteAllConfirm')}\r\n              />\r\n            )} */}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div>\r\n            {/* {shouldOpenEditorDialog && (\r\n                <UserEditorDialog t={t} i18n={i18n}\r\n                  handleClose={this.handleDialogClose}\r\n                  open={shouldOpenEditorDialog}\r\n                  handleOKEditClose={this.handleOKEditClose}\r\n                  item={item}\r\n                />\r\n              )} */}\r\n            {/* \r\n              {shouldOpenConfirmationDialog && (\r\n                <ConfirmationDialog\r\n                  title={t(\"confirm\")}\r\n                  open={shouldOpenConfirmationDialog}\r\n                  onConfirmDialogClose={this.handleDialogClose}\r\n                  onYesClick={this.handleConfirmationResponse}\r\n                  text={t('DeleteConfirm')}\r\n                />\r\n              )} */}\r\n          </div>\r\n\r\n          <MaterialTable\r\n            title={t(\"List\")}\r\n            // data={itemList}\r\n            data={this.state.rows}\r\n            columns={this.state.columns}\r\n            // parentChildData={(row, rows) => {\r\n            //   var list = rows.find((a) => a.id === row.parentId);\r\n            //   return list;\r\n            // }}\r\n            components={{\r\n              Toolbar: (props) => <MTableToolbar {...props} />,\r\n            }}\r\n            onSelectionChange={(rows) => {\r\n              this.data = rows;\r\n            }}\r\n            options={{\r\n              selection: false,\r\n              actionsColumnIndex: -1,\r\n              paging: false,\r\n              search: false,\r\n              rowStyle: (rowData, index) => ({\r\n                backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\",\r\n              }),\r\n              maxBodyHeight: \"450px\",\r\n              minBodyHeight: \"370px\",\r\n              headerStyle: {\r\n                backgroundColor: \"#358600\",\r\n                color: \"#fff\",\r\n              },\r\n              padding: \"dense\",\r\n              toolbar: false,\r\n            }}\r\n            localization={{\r\n              body: {\r\n                emptyDataSourceMessage: `${t(\"general.emptyDataMessageTable\")}`,\r\n              },\r\n            }}\r\n          ></MaterialTable>\r\n\r\n          {/* <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={this.state.dataauto}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"Movie\" />}\r\n          /> */}\r\n          <TablePagination\r\n            align=\"left\"\r\n            className=\"px-16\"\r\n            rowsPerPageOptions={[1, 2, 3, 5, 10, 25, 50, 100]}\r\n            component=\"div\"\r\n            labelRowsPerPage={t(\"general.rows_per_page\")}\r\n            labelDisplayedRows={({ from, to, count }) =>\r\n              `${from}-${to} ${t(\"general.of\")} ${\r\n                count !== -1 ? count : `more than ${to}`\r\n              }`\r\n            }\r\n            count={totalElements}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            backIconButtonProps={{\r\n              \"aria-label\": \"Previous Page\",\r\n            }}\r\n            nextIconButtonProps={{\r\n              \"aria-label\": \"Next Page\",\r\n            }}\r\n            onChangePage={this.handleChangePage}\r\n            onChangeRowsPerPage={this.setRowsPerPage}\r\n          />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Employee;\r\n\r\n// handleTextChange = (event) => {\r\n//   this.setState({ keyword: event.target.value }, function () {});\r\n// };\r\n\r\n// handleKeyDownEnterSearch = (e) => {\r\n//   if (e.key === \"Enter\") {\r\n//     this.search();\r\n//   }\r\n// };\r\n\r\n// setPage = (page) => {\r\n//   this.setState({ page }, function () {\r\n//     this.updatePageData();\r\n//   });\r\n// };\r\n\r\n// setRowsPerPage = (event) => {\r\n//   this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n//     this.updatePageData();\r\n//   });\r\n// };\r\n\r\n// handleChangePage = (event, newPage) => {\r\n//   this.setPage(newPage);\r\n// };\r\n\r\n// search() {\r\n//   this.setState({ page: 0 }, () => {\r\n//     var searchObject = {};\r\n//     searchObject.text = this.state.keyword.trim();\r\n//     searchObject.pageIndex = this.state.page + 1;\r\n//     searchObject.pageSize = this.state.rowsPerPage;\r\n//     searchByPage(searchObject.pageIndex, searchObject.pageSize).then(\r\n//       ({ data }) => {\r\n//         this.setState({\r\n//           itemList: [...data.content],\r\n//           totalElements: data.totalElements,\r\n//         });\r\n//       }\r\n//     );\r\n//   });\r\n// }\r\n\r\n// handleDownload = () => {\r\n//   var blob = new Blob([\"Hello, world!\"], {\r\n//     type: \"text/plain;charset=utf-8\",\r\n//   });\r\n//   saveAs(blob, \"hello world.txt\");\r\n// };\r\n// handleDialogClose = () => {\r\n//   this.setState({\r\n//     shouldOpenEditorDialog: false,\r\n//     shouldOpenConfirmationDialog: false,\r\n//     shouldOpenConfirmationDeleteAllDialog: false,\r\n//   });\r\n//   this.setPage(0);\r\n// };\r\n\r\n// handleOKEditClose = () => {\r\n//   this.setState({\r\n//     shouldOpenEditorDialog: false,\r\n//     shouldOpenConfirmationDialog: false,\r\n//   });\r\n//   this.updatePageData();\r\n// };\r\n\r\n// handleDeleteUser = (id) => {\r\n//   this.setState({\r\n//     id,\r\n//     shouldOpenConfirmationDialog: true,\r\n//   });\r\n// };\r\n\r\n// handleEditUser = (item) => {\r\n//   getItemById(item.id).then((result) => {\r\n//     this.setState({\r\n//       item: result.data,\r\n//       shouldOpenEditorDialog: true,\r\n//     });\r\n//   });\r\n// };\r\n\r\n// handleEditItem = (item) => {\r\n//   this.setState({\r\n//     item: item,\r\n//     shouldOpenEditorDialog: true,\r\n//   });\r\n// };\r\n\r\n// handleDelete = (id) => {\r\n//   this.setState({\r\n//     id,\r\n//     shouldOpenConfirmationDialog: true,\r\n//   });\r\n// };\r\n\r\n// handleDeleteAll = (event) => {\r\n//   this.handleDeleteList(this.data).then(() => {\r\n//     this.updatePageData();\r\n//     this.handleDialogClose();\r\n//   });\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}