{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\src\\\\app\\\\views\\\\Employees\\\\index.jsx\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"i18n\";\nimport { Grid, InputLabel, FormControl, MenuItem, Select, IconButton, Icon } from \"@material-ui/core\";\nimport { insertEmployees, updateEmployees } from \"./EmployeesService\";\nimport { toast } from \"react-toastify\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\nexport default function FormDialog(props) {\n  var _this = this;\n\n  var handleClose = props.handleClose,\n      item = props.item,\n      creat = props.creat;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      listProvince = _useState2[0],\n      setListProvince = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listDistrict = _useState4[0],\n      setListDistrict = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      listCommune = _useState6[0],\n      setListCommune = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(item === null || item === void 0 ? void 0 : item.name),\n      _useState10 = _slicedToArray(_useState9, 2),\n      name = _useState10[0],\n      setName = _useState10[1];\n\n  var _useState11 = useState(item === null || item === void 0 ? void 0 : item.age),\n      _useState12 = _slicedToArray(_useState11, 2),\n      age = _useState12[0],\n      setAge = _useState12[1];\n\n  var _useState13 = useState(item === null || item === void 0 ? void 0 : item.email),\n      _useState14 = _slicedToArray(_useState13, 2),\n      email = _useState14[0],\n      setEmail = _useState14[1];\n\n  var _useState15 = useState(item === null || item === void 0 ? void 0 : item.code),\n      _useState16 = _slicedToArray(_useState15, 2),\n      code = _useState16[0],\n      setCode = _useState16[1];\n\n  var _useState17 = useState(item === null || item === void 0 ? void 0 : item.phone),\n      _useState18 = _slicedToArray(_useState17, 2),\n      phone = _useState18[0],\n      setPhone = _useState18[1];\n\n  var _useState19 = useState({\n    province: {},\n    district: {},\n    commune: {},\n    districtsByProvince: [],\n    communesByDistrict: []\n  }),\n      _useState20 = _slicedToArray(_useState19, 2),\n      address = _useState20[0],\n      setAddress = _useState20[1];\n\n  var handleValidateForm = function handleValidateForm() {\n    if (JSON.stringify(address.province) === JSON.stringify({})) {\n      return false;\n    }\n\n    if (JSON.stringify(address.district) === JSON.stringify({})) {\n      return false;\n    }\n\n    if (JSON.stringify(address.commune) === JSON.stringify({})) {\n      return false;\n    }\n\n    return true;\n  };\n\n  var id = item === null || item === void 0 ? void 0 : item.id;\n\n  var handleChange = function handleChange(e) {\n    if (e.target.name === \"province\") {\n      setAddress(_objectSpread({}, address, {\n        province: e.target.value,\n        district: {},\n        commune: {},\n        districtsByProvince: [],\n        communesByDistrict: []\n      }));\n    }\n\n    if (e.target.name === \"district\") {\n      var list = listCommune.filter(function (commune) {\n        return commune.district.name == e.target.value.name;\n      });\n      setAddress(_objectSpread({}, address, {\n        district: e.target.value,\n        commune: {},\n        communesByDistrict: list\n      }));\n    }\n\n    if (e.target.name === \"commune\") {\n      setAddress(_objectSpread({}, address, {\n        commune: e.target.value\n      }));\n    }\n  };\n\n  var handleOpenDistrict = function handleOpenDistrict() {\n    var checkEmptyProvince = Object.keys(address.province).length === 0 && address.province.constructor === Object;\n\n    if (checkEmptyProvince) {\n      return;\n    } else {\n      setAddress(_objectSpread({}, address, {\n        districtsByProvince: listDistrict\n      }));\n    }\n  };\n\n  var _useTranslation = useTranslation(\"translation\"),\n      t = _useTranslation.t; // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n  // const handleOpenDistrict = () => {\n  //   const checkEmptyProvince =\n  //     Object.keys(address.province).length === 0 &&\n  //     address.province.constructor === Object;\n  //   if (checkEmptyProvince) {\n  //     return;\n  //   } else {\n  //     setAddress({\n  //       ...address,\n  //       districtsByProvince: listDistrict,\n  //     });\n  //   }\n  // };\n\n\n  var handleOpenCommune = function handleOpenCommune() {\n    var checkEmptyDistrict = Object.keys(address.district).length === 0 && address.district.constructor === Object;\n\n    if (checkEmptyDistrict) {\n      return;\n    }\n  };\n\n  useEffect(function () {\n    function fetchAPI() {\n      return _fetchAPI.apply(this, arguments);\n    }\n\n    function _fetchAPI() {\n      _fetchAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://training-api.oceantech.com.vn/cms/employees/search\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    name: \"\",\n                    phone: \"\",\n                    age: \"\",\n                    email: \"\"\n                  })\n                });\n\n              case 2:\n                response = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchAPI.apply(this, arguments);\n    }\n\n    fetchAPI();\n  }, []);\n\n  var handleSave = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var Employees, checkAddress, data, _data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              Employees = {\n                name: name,\n                age: age,\n                email: email,\n                code: code,\n                phone: phone,\n                province: address.province,\n                district: address.district,\n                commune: address.commune\n              };\n              checkAddress = handleValidateForm();\n\n              if (!checkAddress) {\n                _context2.next = 17;\n                break;\n              }\n\n              if (!id) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.next = 7;\n              return updateEmployees(id, Employees);\n\n            case 7:\n              data = _context2.sent;\n\n              if (data.data.message === \"Thành công!\") {\n                setLoading(false);\n                toast.success(\"Cập nhật viên thành công\");\n                handleClose();\n              } else {\n                setLoading(false);\n                toast.warning(data.data.message);\n              }\n\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.next = 13;\n              return insertEmployees(Employees);\n\n            case 13:\n              _data = _context2.sent;\n\n              if (_data.data.message === \"Thành công!\") {\n                setLoading(false);\n                toast.success(\"Thêm nhân viên thành công\");\n                handleClose();\n                creat();\n              } else {\n                setLoading(false);\n                toast.warning(_data.data.message);\n              }\n\n            case 15:\n              _context2.next = 19;\n              break;\n\n            case 17:\n              setLoading(false);\n              toast.error(\"Nhập đủ địa chỉ\");\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSave() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    function fetchAPIProvinces() {\n      return _fetchAPIProvinces.apply(this, arguments);\n    }\n\n    function _fetchAPIProvinces() {\n      _fetchAPIProvinces = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var response, responseJSON, listProvince;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetch(\"http://training-api.oceantech.com.vn/cms/provinces/search\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    name: \"\"\n                  })\n                });\n\n              case 2:\n                response = _context3.sent;\n                _context3.next = 5;\n                return response.json();\n\n              case 5:\n                responseJSON = _context3.sent;\n                listProvince = responseJSON.data;\n                console.log(listProvince); // const data2 = listProvince.map((record) => {\n                //   return {\n                //     id: record.id,\n                //     name: record.name,\n                //   };\n                // });\n                // console.log(data2);\n\n                setListProvince(listProvince);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _fetchAPIProvinces.apply(this, arguments);\n    }\n\n    fetchAPIProvinces();\n  }, []);\n  useEffect(function () {\n    function fetchAPIDistrict() {\n      return _fetchAPIDistrict.apply(this, arguments);\n    }\n\n    function _fetchAPIDistrict() {\n      _fetchAPIDistrict = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var response, responseJSON, listDistrict;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return fetch(\"http://training-api.oceantech.com.vn/cms/districts/search\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    name: \"\"\n                  })\n                });\n\n              case 2:\n                response = _context4.sent;\n                _context4.next = 5;\n                return response.json();\n\n              case 5:\n                responseJSON = _context4.sent;\n                listDistrict = responseJSON.data;\n                console.log(listDistrict);\n                setListDistrict(listDistrict);\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n      return _fetchAPIDistrict.apply(this, arguments);\n    }\n\n    fetchAPIDistrict();\n  }, []);\n  useEffect(function () {\n    function fetchAPICommune() {\n      return _fetchAPICommune.apply(this, arguments);\n    }\n\n    function _fetchAPICommune() {\n      _fetchAPICommune = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var response, responseJSON, listCommune;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return fetch(\"http://training-api.oceantech.com.vn/cms/communes/search\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    name: \"\"\n                  })\n                });\n\n              case 2:\n                response = _context5.sent;\n                _context5.next = 5;\n                return response.json();\n\n              case 5:\n                responseJSON = _context5.sent;\n                listCommune = responseJSON.data;\n                console.log(listCommune);\n                setListCommune(listCommune);\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n      return _fetchAPICommune.apply(this, arguments);\n    }\n\n    fetchAPICommune();\n  }, []);\n  useEffect(function () {\n    ValidatorForm.addValidationRule(\"isName\", function (value) {\n      if (value.length < 6) {\n        return false;\n      }\n\n      return true;\n    });\n    ValidatorForm.addValidationRule(\"isAge\", function (value) {\n      if (value <= 18 || value >= 75) {\n        return false;\n      }\n\n      return true;\n    });\n    ValidatorForm.addValidationRule(\"isCode\", function (value) {\n      var regex = /^\\w{6,}$/;\n\n      if (!regex.test(value)) {\n        return false;\n      }\n\n      return true;\n    });\n    ValidatorForm.addValidationRule(\"isPhone\", function (value) {\n      var regex = /^0[1-9][0-9]{8}$/;\n\n      if (!regex.test(value)) {\n        return false;\n      }\n\n      return true;\n    });\n    return function () {\n      ValidatorForm.removeValidationRule(\"isName\");\n      ValidatorForm.removeValidationRule(\"isAge\");\n      ValidatorForm.removeValidationRule(\"isCode\");\n      ValidatorForm.removeValidationRule(\"isPhone\");\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    \"aria-labelledby\": \"form-dialog-title\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    style: {\n      cursor: \"move\"\n    },\n    id: \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mb-20 styleColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }, \" \", (id ? t(\"general.update\") : t(\"Add\")) + \" \" + t(\"user.title_Employees\"), \" \"), /*#__PURE__*/React.createElement(IconButton, {\n    style: {\n      position: \"absolute\",\n      right: \"10px\",\n      top: \"10px\"\n    },\n    onClick: function onClick() {\n      return handleClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"error\",\n    title: t(\"close\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }, \"close\"))), /*#__PURE__*/React.createElement(ValidatorForm // ref=\"form\"\n  , {\n    onSubmit: handleSave,\n    style: {\n      overflowY: \"auto\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"mb-16\",\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 23\n      }\n    }, \" * \"), t(\"user.displayName\")),\n    type: \"text\",\n    name: \"name\",\n    value: name ? name : \"\",\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    validators: [\"required\", \"isName\"],\n    errorMessages: [t(\"general.errorMessages_required\"), \"Họ và tên ít nhất 6 ký tự\"],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 23\n      }\n    }, \" * \"), t(\"user.age\")),\n    type: \"number\",\n    name: \"age\",\n    value: age ? age : \"\",\n    onChange: function onChange(e) {\n      return setAge(e.target.value);\n    },\n    validators: [\"required\", \"isAge\"],\n    errorMessages: [t(\"general.errorMessages_required\"), \"Không trong độ tuổi lao động\"],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 23\n      }\n    }, \" * \"), t(\"Email\")),\n    type: \"email\",\n    name: \"email\",\n    value: email ? email : \"\",\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    validators: [\"required\", \"isEmail\"],\n    errorMessages: [t(\"general.errorMessages_required\"), t(\"general.errorMessages_email_valid\")],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 23\n      }\n    }, \" * \"), t(\"user.code\")),\n    type: \"text\",\n    name: \"code\",\n    value: code ? code : \"\",\n    onChange: function onChange(e) {\n      return setCode(e.target.value);\n    },\n    validators: [\"required\", \"isCode\"],\n    errorMessages: [t(\"general.errorMessages_required\"), \"Code phải đủ 6-10 ký tự\"],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 23\n      }\n    }, \" * \"), t(\"user.phone\")),\n    type: \"tel\",\n    name: \"phone\",\n    value: phone ? phone : \"\",\n    onChange: function onChange(e) {\n      return setPhone(e.target.value);\n    },\n    validators: [\"required\", \"isPhone\"],\n    errorMessages: [t(\"general.errorMessages_required\"), \"Nhập đúng định dạng sđt\"],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: \"mb-16\",\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"province-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 22\n    }\n  }, t(\"user.province\"))), /*#__PURE__*/React.createElement(Select, {\n    value: JSON.stringify(address.province) === JSON.stringify({}) ? null : address.province,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    inputProps: {\n      name: \"province\",\n      id: \"province-simple\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 19\n    }\n  }, listProvince.map(function (province) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: province.id,\n      value: province,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 25\n      }\n    }, province.name);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: \"mb-16\",\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"district-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 22\n    }\n  }, t(\"user.district\"))), /*#__PURE__*/React.createElement(Select, {\n    value: JSON.stringify(address.district) === JSON.stringify({}) ? null : address.district,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    onOpen: handleOpenDistrict,\n    inputProps: {\n      name: \"district\",\n      id: \"district-simple\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 19\n    }\n  }, address.districtsByProvince.map(function (district) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: district.id,\n      value: district,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 25\n      }\n    }, district.name);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"commune-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 22\n    }\n  }, t(\"user.commune\"))), /*#__PURE__*/React.createElement(Select, {\n    value: JSON.stringify(address.commune) === JSON.stringify({}) ? null : address.commune,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    onOpen: handleOpenCommune,\n    inputProps: {\n      name: \"commune\",\n      id: \"commune-simple\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 19\n    }\n  }, address.communesByDistrict.map(function (commune) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: commune.id,\n      value: commune,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 25\n      }\n    }, commune.name);\n  })))))), /*#__PURE__*/React.createElement(DialogActions, {\n    spacing: 4,\n    className: \"flex flex-end flex-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: function onClick() {\n      return handleClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 13\n    }\n  }, t(\"Cancel\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 13\n    }\n  }, t(\"Save\")))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"H\\u1ECD V\\xE0 T\\xEAn\",\n    type: \"email\",\n    fullWidth: true,\n    value: name ? name : \"\",\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Tu\\u1ED5i\",\n    type: \"email\",\n    fullWidth: true,\n    value: age ? age : \"\",\n    onChange: function onChange(e) {\n      return setAge(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Email\",\n    type: \"email\",\n    fullWidth: true,\n    value: email ? email : \"\",\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Code\",\n    type: \"email\",\n    fullWidth: true,\n    value: code ? code : \"\",\n    onChange: function onChange(e) {\n      return setCode(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Phone\",\n    type: \"email\",\n    fullWidth: true,\n    value: phone ? phone : \"\",\n    onChange: function onChange(e) {\n      return setPhone(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: \"mb-16\",\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"province-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 18\n    }\n  }, t(\"user.province\"))), /*#__PURE__*/React.createElement(Select, {\n    value: JSON.stringify(address.province) === JSON.stringify({}) ? null : address.province,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    inputProps: {\n      name: \"province\",\n      id: \"province-simple\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 15\n    }\n  }, listProvince.map(function (province) {\n    // console.log(province);\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: province.id,\n      value: province,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 21\n      }\n    }, province.name);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: \"mb-16\",\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"district-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 18\n    }\n  }, t(\"user.district\"))), /*#__PURE__*/React.createElement(Select, {\n    value: JSON.stringify(address.district) === JSON.stringify({}) ? null : address.district,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    onOpen: handleOpenDistrict,\n    inputProps: {\n      name: \"district\",\n      id: \"district-simple\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 15\n    }\n  }, address.districtsByProvince.map(function (district) {\n    console.log(district);\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: district.id,\n      value: district,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 21\n      }\n    }, district.name);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"commune-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 18\n    }\n  }, t(\"user.commune\"))), /*#__PURE__*/React.createElement(Select, {\n    value: JSON.stringify(address.commune) === JSON.stringify({}) ? null : address.commune,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    onOpen: handleOpenCommune,\n    inputProps: {\n      name: \"commune\",\n      id: \"commune-simple\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 15\n    }\n  }, address.communesByDistrict.map(function (commune) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: commune.id,\n      value: commune,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 21\n      }\n    }, commune.name);\n  }))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSave,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 11\n    }\n  }, \"Subscribe\"))));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/L0-old/src/app/views/Employees/index.jsx"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ValidatorForm","TextValidator","useState","useEffect","useTranslation","i18n","Grid","InputLabel","FormControl","MenuItem","Select","IconButton","Icon","insertEmployees","updateEmployees","toast","configure","autoClose","draggable","limit","FormDialog","props","handleClose","item","creat","open","setOpen","listProvince","setListProvince","listDistrict","setListDistrict","listCommune","setListCommune","loading","setLoading","name","setName","age","setAge","email","setEmail","code","setCode","phone","setPhone","province","district","commune","districtsByProvince","communesByDistrict","address","setAddress","handleValidateForm","JSON","stringify","id","handleChange","e","target","value","list","filter","handleOpenDistrict","checkEmptyProvince","Object","keys","length","constructor","t","handleOpenCommune","checkEmptyDistrict","fetchAPI","fetch","method","headers","body","response","handleSave","Employees","checkAddress","data","message","success","warning","error","fetchAPIProvinces","json","responseJSON","console","log","fetchAPIDistrict","fetchAPICommune","addValidationRule","regex","test","removeValidationRule","cursor","position","right","top","overflowY","display","flexDirection","color","map"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"i18n\";\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  IconButton,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport { insertEmployees, updateEmployees } from \"./EmployeesService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\nexport default function FormDialog(props) {\r\n  const { handleClose, item, creat } = props;\r\n  const [open, setOpen] = React.useState(true);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState([]);\r\n  const [listCommune, setListCommune] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [name, setName] = useState(item?.name);\r\n  const [age, setAge] = useState(item?.age);\r\n  const [email, setEmail] = useState(item?.email);\r\n  const [code, setCode] = useState(item?.code);\r\n  const [phone, setPhone] = useState(item?.phone);\r\n\r\n  const [address, setAddress] = useState({\r\n    province: {},\r\n    district: {},\r\n    commune: {},\r\n    districtsByProvince: [],\r\n    communesByDistrict: [],\r\n  });\r\n\r\n  const handleValidateForm = () => {\r\n    if (JSON.stringify(address.province) === JSON.stringify({})) {\r\n      return false;\r\n    }\r\n    if (JSON.stringify(address.district) === JSON.stringify({})) {\r\n      return false;\r\n    }\r\n    if (JSON.stringify(address.commune) === JSON.stringify({})) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const id = item?.id;\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"province\") {\r\n      setAddress({\r\n        ...address,\r\n        province: e.target.value,\r\n        district: {},\r\n        commune: {},\r\n        districtsByProvince: [],\r\n        communesByDistrict: [],\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"district\") {\r\n      const list = listCommune.filter(\r\n        (commune) => commune.district.name == e.target.value.name\r\n      );\r\n      setAddress({\r\n        ...address,\r\n        district: e.target.value,\r\n        commune: {},\r\n        communesByDistrict: list,\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"commune\") {\r\n      setAddress({\r\n        ...address,\r\n        commune: e.target.value,\r\n      });\r\n    }\r\n  };\r\n  const handleOpenDistrict = () => {\r\n    const checkEmptyProvince =\r\n      Object.keys(address.province).length === 0 &&\r\n      address.province.constructor === Object;\r\n\r\n    if (checkEmptyProvince) {\r\n      return;\r\n    } else {\r\n      setAddress({\r\n        ...address,\r\n        districtsByProvince: listDistrict,\r\n      });\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation(\"translation\");\r\n  // const handleClickOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  // const handleOpenDistrict = () => {\r\n  //   const checkEmptyProvince =\r\n  //     Object.keys(address.province).length === 0 &&\r\n  //     address.province.constructor === Object;\r\n\r\n  //   if (checkEmptyProvince) {\r\n  //     return;\r\n  //   } else {\r\n  //     setAddress({\r\n  //       ...address,\r\n  //       districtsByProvince: listDistrict,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  const handleOpenCommune = () => {\r\n    const checkEmptyDistrict =\r\n      Object.keys(address.district).length === 0 &&\r\n      address.district.constructor === Object;\r\n    if (checkEmptyDistrict) {\r\n      return;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    async function fetchAPI() {\r\n      const response = await fetch(\r\n        \"http://training-api.oceantech.com.vn/cms/employees/search\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ name: \"\", phone: \"\", age: \"\", email: \"\" }),\r\n        }\r\n      );\r\n    }\r\n    \r\n    fetchAPI();\r\n  }, []);\r\n  const handleSave = async () => {\r\n    setLoading(true);\r\n\r\n    const Employees = {\r\n      name,\r\n      age,\r\n      email,\r\n      code,\r\n      phone,\r\n      province: address.province,\r\n      district: address.district,\r\n      commune: address.commune,\r\n    };\r\n    const checkAddress = handleValidateForm();\r\n\r\n    if (checkAddress) {\r\n      if (id) {\r\n        const data = await updateEmployees(id, Employees);\r\n\r\n        if (data.data.message === \"Thành công!\") {\r\n          setLoading(false);\r\n          toast.success(\"Cập nhật viên thành công\");\r\n          handleClose();\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning(data.data.message);\r\n        }\r\n      } else {\r\n        const data = await insertEmployees(Employees);\r\n\r\n        if (data.data.message === \"Thành công!\") {\r\n          setLoading(false);\r\n          toast.success(\"Thêm nhân viên thành công\");\r\n          handleClose();\r\n          creat();\r\n        } else {\r\n          setLoading(false);\r\n          toast.warning(data.data.message);\r\n        }\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n      toast.error(\"Nhập đủ địa chỉ\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    async function fetchAPIProvinces() {\r\n      const response = await fetch(\r\n        \"http://training-api.oceantech.com.vn/cms/provinces/search\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ name: \"\" }),\r\n        }\r\n      );\r\n      const responseJSON = await response.json();\r\n      const listProvince = responseJSON.data;\r\n      console.log(listProvince);\r\n      // const data2 = listProvince.map((record) => {\r\n      //   return {\r\n      //     id: record.id,\r\n      //     name: record.name,\r\n      //   };\r\n      // });\r\n      // console.log(data2);\r\n      setListProvince(listProvince);\r\n    }\r\n    fetchAPIProvinces();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchAPIDistrict() {\r\n      const response = await fetch(\r\n        \"http://training-api.oceantech.com.vn/cms/districts/search\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ name: \"\" }),\r\n        }\r\n      );\r\n      const responseJSON = await response.json();\r\n      const listDistrict = responseJSON.data;\r\n      console.log(listDistrict);\r\n      setListDistrict(listDistrict);\r\n    }\r\n    fetchAPIDistrict();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchAPICommune() {\r\n      const response = await fetch(\r\n        \"http://training-api.oceantech.com.vn/cms/communes/search\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ name: \"\" }),\r\n        }\r\n      );\r\n      const responseJSON = await response.json();\r\n      const listCommune = responseJSON.data;\r\n      console.log(listCommune);\r\n      setListCommune(listCommune);\r\n    }\r\n    fetchAPICommune();\r\n  }, []);\r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule(\"isName\", (value) => {\r\n      if (value.length < 6) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    ValidatorForm.addValidationRule(\"isAge\", (value) => {\r\n      if (value <= 18 || value >= 75) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    ValidatorForm.addValidationRule(\"isCode\", (value) => {\r\n      let regex = /^\\w{6,}$/;\r\n      if (!regex.test(value)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    ValidatorForm.addValidationRule(\"isPhone\", (value) => {\r\n      let regex = /^0[1-9][0-9]{8}$/;\r\n      if (!regex.test(value)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    return () => {\r\n      ValidatorForm.removeValidationRule(\"isName\");\r\n      ValidatorForm.removeValidationRule(\"isAge\");\r\n      ValidatorForm.removeValidationRule(\"isCode\");\r\n      ValidatorForm.removeValidationRule(\"isPhone\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button> */}\r\n\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\" fullWidth={true}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          <span className=\"mb-20 styleColor\">\r\n            {\" \"}\r\n            {(id ? t(\"general.update\") : t(\"Add\")) +\r\n              \" \" +\r\n              t(\"user.title_Employees\")}{\" \"}\r\n          </span>\r\n\r\n          <IconButton\r\n            style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n            onClick={() => handleClose()}\r\n          >\r\n            <Icon color=\"error\" title={t(\"close\")}>\r\n              close\r\n            </Icon>\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <ValidatorForm\r\n          // ref=\"form\"\r\n          onSubmit={handleSave}\r\n          style={{\r\n            overflowY: \"auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <DialogContent dividers>\r\n            <Grid className=\"mb-16\" container spacing={1}>\r\n              <Grid item lg={4} md={4} sm={4} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={\r\n                    <span className=\"font\">\r\n                      <span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"user.displayName\")}\r\n                    </span>\r\n                  }\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name ? name : \"\"}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  validators={[\"required\", \"isName\"]}\r\n                  errorMessages={[\r\n                    t(\"general.errorMessages_required\"),\r\n                    \"Họ và tên ít nhất 6 ký tự\",\r\n                  ]}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              {/* age */}\r\n              <Grid item lg={4} md={4} sm={4} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={\r\n                    <span className=\"font\">\r\n                      <span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"user.age\")}\r\n                    </span>\r\n                  }\r\n                  type=\"number\"\r\n                  name=\"age\"\r\n                  value={age ? age : \"\"}\r\n                  onChange={(e) => setAge(e.target.value)}\r\n                  validators={[\"required\", \"isAge\"]}\r\n                  errorMessages={[\r\n                    t(\"general.errorMessages_required\"),\r\n                    \"Không trong độ tuổi lao động\",\r\n                  ]}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              {/* email */}\r\n              <Grid item lg={4} md={4} sm={4} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={\r\n                    <span className=\"font\">\r\n                      <span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"Email\")}\r\n                    </span>\r\n                  }\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email ? email : \"\"}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  validators={[\"required\", \"isEmail\"]}\r\n                  errorMessages={[\r\n                    t(\"general.errorMessages_required\"),\r\n                    t(\"general.errorMessages_email_valid\"),\r\n                  ]}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              {/* code */}\r\n              <Grid item lg={4} md={4} sm={4} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={\r\n                    <span className=\"font\">\r\n                      <span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"user.code\")}\r\n                    </span>\r\n                  }\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code ? code : \"\"}\r\n                  onChange={(e) => setCode(e.target.value)}\r\n                  validators={[\"required\", \"isCode\"]}\r\n                  errorMessages={[\r\n                    t(\"general.errorMessages_required\"),\r\n                    \"Code phải đủ 6-10 ký tự\",\r\n                  ]}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              {/* phone */}\r\n              <Grid item lg={4} md={4} sm={4} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={\r\n                    <span className=\"font\">\r\n                      <span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"user.phone\")}\r\n                    </span>\r\n                  }\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  value={phone ? phone : \"\"}\r\n                  onChange={(e) => setPhone(e.target.value)}\r\n                  validators={[\"required\", \"isPhone\"]}\r\n                  errorMessages={[\r\n                    t(\"general.errorMessages_required\"),\r\n                    \"Nhập đúng định dạng sđt\",\r\n                  ]}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              {/* province */}\r\n              <Grid item lg={4} md={4} sm={4} xs={12}>\r\n                <FormControl\r\n                  className=\"mb-16\"\r\n                  fullWidth={true}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                >\r\n                  <InputLabel htmlFor=\"province-simple\">\r\n                    {<span className=\"font\">{t(\"user.province\")}</span>}\r\n                  </InputLabel>\r\n                  <Select\r\n                    value={\r\n                      JSON.stringify(address.province) === JSON.stringify({})\r\n                        ? null\r\n                        : address.province\r\n                    }\r\n                    onChange={(e) => handleChange(e)}\r\n                    inputProps={{\r\n                      name: \"province\",\r\n                      id: \"province-simple\",\r\n                    }}\r\n                  >\r\n                    {listProvince.map((province) => {\r\n                      return (\r\n                        <MenuItem key={province.id} value={province}>\r\n                          {province.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              {/* district */}\r\n              <Grid item lg={4} md={4} sm={4} xs={12}>\r\n                <FormControl\r\n                  className=\"mb-16\"\r\n                  fullWidth={true}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                >\r\n                  <InputLabel htmlFor=\"district-simple\">\r\n                    {<span className=\"font\">{t(\"user.district\")}</span>}\r\n                  </InputLabel>\r\n                  <Select\r\n                    value={\r\n                      JSON.stringify(address.district) === JSON.stringify({})\r\n                        ? null\r\n                        : address.district\r\n                    }\r\n                    onChange={(e) => handleChange(e)}\r\n                    onOpen={handleOpenDistrict}\r\n                    inputProps={{\r\n                      name: \"district\",\r\n                      id: \"district-simple\",\r\n                    }}\r\n                  >\r\n                    {address.districtsByProvince.map((district) => {\r\n                      return (\r\n                        <MenuItem key={district.id} value={district}>\r\n                          {district.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              {/* commune */}\r\n              <Grid item lg={4} md={4} sm={4} xs={12}>\r\n                <FormControl fullWidth={true} variant=\"outlined\" size=\"small\">\r\n                  <InputLabel htmlFor=\"commune-simple\">\r\n                    {<span className=\"font\">{t(\"user.commune\")}</span>}\r\n                  </InputLabel>\r\n                  <Select\r\n                    value={\r\n                      JSON.stringify(address.commune) === JSON.stringify({})\r\n                        ? null\r\n                        : address.commune\r\n                    }\r\n                    onChange={(e) => handleChange(e)}\r\n                    onOpen={handleOpenCommune}\r\n                    inputProps={{\r\n                      name: \"commune\",\r\n                      id: \"commune-simple\",\r\n                    }}\r\n                  >\r\n                    {address.communesByDistrict.map((commune) => {\r\n                      return (\r\n                        <MenuItem key={commune.id} value={commune}>\r\n                          {commune.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => handleClose()}\r\n            >\r\n              {t(\"Cancel\")}\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={loading}\r\n            >\r\n              {t(\"Save\")}\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Họ Và Tên\"\r\n              type=\"email\"\r\n              fullWidth\r\n              value={name ? name : \"\"}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Tuổi\"\r\n              type=\"email\"\r\n              fullWidth\r\n              value={age ? age : \"\"}\r\n              onChange={(e) => setAge(e.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              fullWidth\r\n              value={email ? email : \"\"}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Code\"\r\n              type=\"email\"\r\n              fullWidth\r\n              value={code ? code : \"\"}\r\n              onChange={(e) => setCode(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Phone\"\r\n              type=\"email\"\r\n              fullWidth\r\n              value={phone ? phone : \"\"}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <FormControl\r\n              className=\"mb-16\"\r\n              fullWidth={true}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            >\r\n              <InputLabel htmlFor=\"province-simple\">\r\n                {<span className=\"font\">{t(\"user.province\")}</span>}\r\n              </InputLabel>\r\n              <Select\r\n                value={\r\n                  JSON.stringify(address.province) === JSON.stringify({})\r\n                    ? null\r\n                    : address.province\r\n                }\r\n                onChange={(e) => handleChange(e)}\r\n                inputProps={{\r\n                  name: \"province\",\r\n                  id: \"province-simple\",\r\n                }}\r\n              >\r\n                {listProvince.map((province) => {\r\n                  // console.log(province);\r\n                  return (\r\n                    <MenuItem key={province.id} value={province}>\r\n                      {province.name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <FormControl\r\n              className=\"mb-16\"\r\n              fullWidth={true}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            >\r\n              <InputLabel htmlFor=\"district-simple\">\r\n                {<span className=\"font\">{t(\"user.district\")}</span>}\r\n              </InputLabel>\r\n              <Select\r\n                value={\r\n                  JSON.stringify(address.district) === JSON.stringify({})\r\n                    ? null\r\n                    : address.district\r\n                }\r\n                onChange={(e) => handleChange(e)}\r\n                onOpen={handleOpenDistrict}\r\n                inputProps={{\r\n                  name: \"district\",\r\n                  id: \"district-simple\",\r\n                }}\r\n              >\r\n                {address.districtsByProvince.map((district) => {\r\n                  console.log(district);\r\n                  return (\r\n                    <MenuItem key={district.id} value={district}>\r\n                      {district.name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={4} xs={12}>\r\n            <FormControl fullWidth={true} variant=\"outlined\" size=\"small\">\r\n              <InputLabel htmlFor=\"commune-simple\">\r\n                {<span className=\"font\">{t(\"user.commune\")}</span>}\r\n              </InputLabel>\r\n              <Select\r\n                value={\r\n                  JSON.stringify(address.commune) === JSON.stringify({})\r\n                    ? null\r\n                    : address.commune\r\n                }\r\n                onChange={(e) => handleChange(e)}\r\n                onOpen={handleOpenCommune}\r\n                inputProps={{\r\n                  name: \"commune\",\r\n                  id: \"commune-simple\",\r\n                }}\r\n              >\r\n                {address.communesByDistrict.map((commune) => {\r\n                  return (\r\n                    <MenuItem key={commune.id} value={commune}>\r\n                      {commune.name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}