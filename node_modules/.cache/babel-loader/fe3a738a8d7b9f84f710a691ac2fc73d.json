{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\src\\\\app\\\\views\\\\Employees\\\\index.jsx\";\nimport React from \"react\";\nimport { Dialog, Button, Grid, InputLabel, FormControl, MenuItem, Select, DialogActions, DialogTitle, DialogContent, IconButton, Icon } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { insertEmployees, updateEmployees } from \"./EmployeesService\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"../../../styles/views/_loadding.scss\";\nimport clsx from \"clsx\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../../../styles/views/_style.scss\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getListCommune, getListDistrict, getListProvince } from \"app/redux/actions/EmployeesActions\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  })));\n}\n\nfunction EmployeesEditorDialog(props) {\n  var _this = this;\n\n  var open = props.open,\n      handleClose = props.handleClose,\n      t = props.t,\n      item = props.item; // const id = item.id;\n\n  var listProvince = useSelector(function (state) {\n    return state.Employees.listProvince;\n  });\n  var listDistrict = useSelector(function (state) {\n    return state.Employees.listDistrict;\n  });\n  var listCommune = useSelector(function (state) {\n    return state.Employees.listCommune;\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(item === null || item === void 0 ? void 0 : item.name),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(item === null || item === void 0 ? void 0 : item.age),\n      _useState6 = _slicedToArray(_useState5, 2),\n      age = _useState6[0],\n      setAge = _useState6[1];\n\n  var _useState7 = useState(item === null || item === void 0 ? void 0 : item.email),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(item === null || item === void 0 ? void 0 : item.code),\n      _useState10 = _slicedToArray(_useState9, 2),\n      code = _useState10[0],\n      setCode = _useState10[1];\n\n  var _useState11 = useState(item === null || item === void 0 ? void 0 : item.phone),\n      _useState12 = _slicedToArray(_useState11, 2),\n      phone = _useState12[0],\n      setPhone = _useState12[1];\n\n  var _useState13 = useState({\n    province: {},\n    district: {},\n    commune: {},\n    districtsByProvince: [],\n    communesByDistrict: []\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      address = _useState14[0],\n      setAddress = _useState14[1];\n\n  var disPatch = useDispatch();\n\n  var handleValidateForm = function handleValidateForm() {\n    if (JSON.stringify(address.province) === JSON.stringify({})) {\n      return false;\n    }\n\n    if (JSON.stringify(address.district) === JSON.stringify({})) {\n      return false;\n    }\n\n    if (JSON.stringify(address.commune) === JSON.stringify({})) {\n      return false;\n    }\n\n    return true;\n  }; // const handleSave = async () => {\n  //   setLoading(true);\n  //   const Employees = {\n  //     name,\n  //     age,\n  //     email,\n  //     code,\n  //     phone,\n  //     province: address.province,\n  //     district: address.district,\n  //     commune: address.commune,\n  //   };\n  //   const checkAddress = handleValidateForm();\n  //   if (checkAddress) {\n  //     if (id) {\n  //       const data = await updateEmployees(id, Employees);\n  //       if (data.data.message === \"Thành công!\") {\n  //         setLoading(false);\n  //         toast.success(\"Cập nhật viên thành công\");\n  //         handleClose();\n  //       } else {\n  //         setLoading(false);\n  //         toast.warning(data.data.message);\n  //       }\n  //     } else {\n  //       const data = await insertEmployees(Employees);\n  //       if (data.data.message === \"Thành công!\") {\n  //         setLoading(false);\n  //         toast.success(\"Thêm nhân viên thành công\");\n  //         handleClose();\n  //       } else {\n  //         setLoading(false);\n  //         toast.warning(data.data.message);\n  //       }\n  //     }\n  //   } else {\n  //     setLoading(false);\n  //     toast.error(\"Nhập đủ địa chỉ\");\n  //   }\n  // };\n  // const handleOpenDistrict = () => {\n  //   const checkEmptyProvince =\n  //     Object.keys(address.province).length === 0 &&\n  //     address.province.constructor === Object;\n  //   if (checkEmptyProvince) {\n  //     return;\n  //   } else {\n  //     setAddress({\n  //       ...address,\n  //       districtsByProvince: listDistrict,\n  //     });\n  //   }\n  // };\n  // const handleOpenCommune = () => {\n  //   const checkEmptyDistrict =\n  //     Object.keys(address.district).length === 0 &&\n  //     address.district.constructor === Object;\n  //   if (checkEmptyDistrict) {\n  //     return;\n  //   }\n  // };\n  // const handleChange = (e) => {\n  //   if (e.target.name === \"province\") {\n  //     setAddress({\n  //       ...address,\n  //       province: e.target.value,\n  //       district: {},\n  //       commune: {},\n  //       districtsByProvince: [],\n  //       communesByDistrict: [],\n  //     });\n  //   }\n  //   if (e.target.name === \"district\") {\n  //     const list = listCommune.filter(\n  //       (commune) => commune.district.name == e.target.value.name\n  //     );\n  //     setAddress({\n  //       ...address,\n  //       district: e.target.value,\n  //       commune: {},\n  //       communesByDistrict: list,\n  //     });\n  //   }\n  //   if (e.target.name === \"commune\") {\n  //     setAddress({\n  //       ...address,\n  //       commune: e.target.value,\n  //     });\n  //   }\n  // };\n  // useEffect(() => {\n  //   disPatch(getListProvince());\n  //   disPatch(getListDistrict());\n  //   disPatch(getListCommune());\n  //   ValidatorForm.addValidationRule(\"isName\", (value) => {\n  //     if (value.length < 6) {\n  //       return false;\n  //     }\n  //     return true;\n  //   });\n  //   ValidatorForm.addValidationRule(\"isAge\", (value) => {\n  //     if (value <= 18 || value >= 75) {\n  //       return false;\n  //     }\n  //     return true;\n  //   });\n  //   ValidatorForm.addValidationRule(\"isCode\", (value) => {\n  //     let regex = /^\\w{6,}$/;\n  //     if (!regex.test(value)) {\n  //       return false;\n  //     }\n  //     return true;\n  //   });\n  //   ValidatorForm.addValidationRule(\"isPhone\", (value) => {\n  //     let regex = /^0[1-9][0-9]{8}$/;\n  //     if (!regex.test(value)) {\n  //       return false;\n  //     }\n  //     return true;\n  //   });\n  //   return () => {\n  //     ValidatorForm.removeValidationRule(\"isName\");\n  //     ValidatorForm.removeValidationRule(\"isAge\");\n  //     ValidatorForm.removeValidationRule(\"isCode\");\n  //     ValidatorForm.removeValidationRule(\"isPhone\");\n  //   };\n  // }, []);\n\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    PaperComponent: PaperComponent,\n    maxWidth: \"md\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"wrapperButton\", !loading && \"hidden\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    className: \"buttonProgress\",\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DialogTitle, {\n    style: {\n      cursor: \"move\"\n    },\n    id: \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mb-20 styleColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, \" \", (id ? t(\"general.update\") : t(\"Add\")) + \" \" + t(\"user.title_Employees\"), \" \"), /*#__PURE__*/React.createElement(IconButton, {\n    style: {\n      position: \"absolute\",\n      right: \"10px\",\n      top: \"10px\"\n    },\n    onClick: function onClick() {\n      return handleClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"error\",\n    title: t(\"close\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, \"close\"))), /*#__PURE__*/React.createElement(ValidatorForm // ref=\"form\"\n  , {\n    onSubmit: handleClose(),\n    style: {\n      overflowY: \"auto\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"mb-16\",\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, \" * \"), t(\"user.displayName\")),\n    type: \"text\",\n    name: \"name\",\n    value: name ? name : \"\",\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    validators: [\"required\", \"isName\"],\n    errorMessages: [t(\"general.errorMessages_required\"), \"Họ và tên ít nhất 6 ký tự\"],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }\n    }, \" * \"), t(\"user.age\")),\n    type: \"number\",\n    name: \"age\",\n    value: age ? age : \"\",\n    onChange: function onChange(e) {\n      return setAge(e.target.value);\n    },\n    validators: [\"required\", \"isAge\"],\n    errorMessages: [t(\"general.errorMessages_required\"), \"Không trong độ tuổi lao động\"],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }\n    }, \" * \"), t(\"Email\")),\n    type: \"email\",\n    name: \"email\",\n    value: email ? email : \"\",\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    validators: [\"required\", \"isEmail\"],\n    errorMessages: [t(\"general.errorMessages_required\"), t(\"general.errorMessages_email_valid\")],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }\n    }, \" * \"), t(\"user.code\")),\n    type: \"text\",\n    name: \"code\",\n    value: code ? code : \"\",\n    onChange: function onChange(e) {\n      return setCode(e.target.value);\n    },\n    validators: [\"required\", \"isCode\"],\n    errorMessages: [t(\"general.errorMessages_required\"), \"Code phải đủ 6-10 ký tự\"],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 21\n      }\n    }, \" * \"), t(\"user.phone\")),\n    type: \"tel\",\n    name: \"phone\",\n    value: phone ? phone : \"\",\n    onChange: function onChange(e) {\n      return setPhone(e.target.value);\n    },\n    validators: [\"required\", \"isPhone\"],\n    errorMessages: [t(\"general.errorMessages_required\"), \"Nhập đúng định dạng sđt\"],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: \"mb-16\",\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"province-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 20\n    }\n  }, t(\"user.province\"))), /*#__PURE__*/React.createElement(Select, {\n    value: JSON.stringify(address.province) === JSON.stringify({}) ? null : address.province,\n    onChange: function onChange(e) {\n      return handleClose;\n    },\n    inputProps: {\n      name: \"province\",\n      id: \"province-simple\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  }, listProvince.map(function (province) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: province.id,\n      value: province,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 23\n      }\n    }, province.name);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: \"mb-16\",\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"district-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 20\n    }\n  }, t(\"user.district\"))), /*#__PURE__*/React.createElement(Select, {\n    value: JSON.stringify(address.district) === JSON.stringify({}) ? null : address.district,\n    onChange: function onChange(e) {\n      return handleClose;\n    },\n    onOpen: handleClose,\n    inputProps: {\n      name: \"district\",\n      id: \"district-simple\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 17\n    }\n  }, address.districtsByProvince.map(function (district) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: district.id,\n      value: district,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 23\n      }\n    }, district.name);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"commune-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 20\n    }\n  }, t(\"user.commune\"))), /*#__PURE__*/React.createElement(Select, {\n    value: JSON.stringify(address.commune) === JSON.stringify({}) ? null : address.commune,\n    onChange: function onChange(e) {\n      return handleClose;\n    },\n    onOpen: handleClose,\n    inputProps: {\n      name: \"commune\",\n      id: \"commune-simple\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 17\n    }\n  }, address.communesByDistrict.map(function (commune) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: commune.id,\n      value: commune,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 23\n      }\n    }, commune.name);\n  })))))), /*#__PURE__*/React.createElement(DialogActions, {\n    spacing: 4,\n    className: \"flex flex-end flex-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: function onClick() {\n      return handleClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 11\n    }\n  }, t(\"Cancel\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 11\n    }\n  }, t(\"Save\")))));\n}\n\nexport default EmployeesEditorDialog;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/L0-old/src/app/views/Employees/index.jsx"],"names":["React","Dialog","Button","Grid","InputLabel","FormControl","MenuItem","Select","DialogActions","DialogTitle","DialogContent","IconButton","Icon","ValidatorForm","TextValidator","insertEmployees","updateEmployees","Draggable","Paper","clsx","CircularProgress","toast","useState","useEffect","useDispatch","useSelector","getListCommune","getListDistrict","getListProvince","configure","autoClose","draggable","limit","PaperComponent","props","EmployeesEditorDialog","open","handleClose","t","item","listProvince","state","Employees","listDistrict","listCommune","loading","setLoading","name","setName","age","setAge","email","setEmail","code","setCode","phone","setPhone","province","district","commune","districtsByProvince","communesByDistrict","address","setAddress","disPatch","handleValidateForm","JSON","stringify","cursor","id","position","right","top","overflowY","display","flexDirection","color","e","target","value","map"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  IconButton,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { insertEmployees, updateEmployees } from \"./EmployeesService\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"../../../styles/views/_loadding.scss\";\r\nimport clsx from \"clsx\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../styles/views/_style.scss\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getListCommune,\r\n  getListDistrict,\r\n  getListProvince,\r\n} from \"app/redux/actions/EmployeesActions\";\r\n\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nfunction EmployeesEditorDialog(props) {\r\n  const { open, handleClose, t, item } = props;\r\n  // const id = item.id;\r\n\r\n  const listProvince = useSelector((state) => state.Employees.listProvince);\r\n  const listDistrict = useSelector((state) => state.Employees.listDistrict);\r\n  const listCommune = useSelector((state) => state.Employees.listCommune);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [name, setName] = useState(item?.name);\r\n  const [age, setAge] = useState(item?.age);\r\n  const [email, setEmail] = useState(item?.email);\r\n  const [code, setCode] = useState(item?.code);\r\n  const [phone, setPhone] = useState(item?.phone);\r\n  const [address, setAddress] = useState({\r\n    province: {},\r\n    district: {},\r\n    commune: {},\r\n    districtsByProvince: [],\r\n    communesByDistrict: [],\r\n  });\r\n\r\n  const disPatch = useDispatch();\r\n\r\n  const handleValidateForm = () => {\r\n    if (JSON.stringify(address.province) === JSON.stringify({})) {\r\n      return false;\r\n    }\r\n    if (JSON.stringify(address.district) === JSON.stringify({})) {\r\n      return false;\r\n    }\r\n    if (JSON.stringify(address.commune) === JSON.stringify({})) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // const handleSave = async () => {\r\n  //   setLoading(true);\r\n\r\n  //   const Employees = {\r\n  //     name,\r\n  //     age,\r\n  //     email,\r\n  //     code,\r\n  //     phone,\r\n  //     province: address.province,\r\n  //     district: address.district,\r\n  //     commune: address.commune,\r\n  //   };\r\n  //   const checkAddress = handleValidateForm();\r\n\r\n  //   if (checkAddress) {\r\n  //     if (id) {\r\n  //       const data = await updateEmployees(id, Employees);\r\n\r\n  //       if (data.data.message === \"Thành công!\") {\r\n  //         setLoading(false);\r\n  //         toast.success(\"Cập nhật viên thành công\");\r\n  //         handleClose();\r\n  //       } else {\r\n  //         setLoading(false);\r\n  //         toast.warning(data.data.message);\r\n  //       }\r\n  //     } else {\r\n  //       const data = await insertEmployees(Employees);\r\n\r\n  //       if (data.data.message === \"Thành công!\") {\r\n  //         setLoading(false);\r\n  //         toast.success(\"Thêm nhân viên thành công\");\r\n  //         handleClose();\r\n  //       } else {\r\n  //         setLoading(false);\r\n  //         toast.warning(data.data.message);\r\n  //       }\r\n  //     }\r\n  //   } else {\r\n  //     setLoading(false);\r\n  //     toast.error(\"Nhập đủ địa chỉ\");\r\n  //   }\r\n  // };\r\n\r\n  // const handleOpenDistrict = () => {\r\n  //   const checkEmptyProvince =\r\n  //     Object.keys(address.province).length === 0 &&\r\n  //     address.province.constructor === Object;\r\n\r\n  //   if (checkEmptyProvince) {\r\n  //     return;\r\n  //   } else {\r\n  //     setAddress({\r\n  //       ...address,\r\n  //       districtsByProvince: listDistrict,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // const handleOpenCommune = () => {\r\n  //   const checkEmptyDistrict =\r\n  //     Object.keys(address.district).length === 0 &&\r\n  //     address.district.constructor === Object;\r\n  //   if (checkEmptyDistrict) {\r\n  //     return;\r\n  //   }\r\n  // };\r\n\r\n  // const handleChange = (e) => {\r\n  //   if (e.target.name === \"province\") {\r\n  //     setAddress({\r\n  //       ...address,\r\n  //       province: e.target.value,\r\n  //       district: {},\r\n  //       commune: {},\r\n  //       districtsByProvince: [],\r\n  //       communesByDistrict: [],\r\n  //     });\r\n  //   }\r\n\r\n  //   if (e.target.name === \"district\") {\r\n  //     const list = listCommune.filter(\r\n  //       (commune) => commune.district.name == e.target.value.name\r\n  //     );\r\n  //     setAddress({\r\n  //       ...address,\r\n  //       district: e.target.value,\r\n  //       commune: {},\r\n  //       communesByDistrict: list,\r\n  //     });\r\n  //   }\r\n\r\n  //   if (e.target.name === \"commune\") {\r\n  //     setAddress({\r\n  //       ...address,\r\n  //       commune: e.target.value,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   disPatch(getListProvince());\r\n  //   disPatch(getListDistrict());\r\n  //   disPatch(getListCommune());\r\n\r\n  //   ValidatorForm.addValidationRule(\"isName\", (value) => {\r\n  //     if (value.length < 6) {\r\n  //       return false;\r\n  //     }\r\n  //     return true;\r\n  //   });\r\n\r\n  //   ValidatorForm.addValidationRule(\"isAge\", (value) => {\r\n  //     if (value <= 18 || value >= 75) {\r\n  //       return false;\r\n  //     }\r\n  //     return true;\r\n  //   });\r\n\r\n  //   ValidatorForm.addValidationRule(\"isCode\", (value) => {\r\n  //     let regex = /^\\w{6,}$/;\r\n  //     if (!regex.test(value)) {\r\n  //       return false;\r\n  //     }\r\n  //     return true;\r\n  //   });\r\n\r\n  //   ValidatorForm.addValidationRule(\"isPhone\", (value) => {\r\n  //     let regex = /^0[1-9][0-9]{8}$/;\r\n  //     if (!regex.test(value)) {\r\n  //       return false;\r\n  //     }\r\n  //     return true;\r\n  //   });\r\n\r\n  //   return () => {\r\n  //     ValidatorForm.removeValidationRule(\"isName\");\r\n  //     ValidatorForm.removeValidationRule(\"isAge\");\r\n  //     ValidatorForm.removeValidationRule(\"isCode\");\r\n  //     ValidatorForm.removeValidationRule(\"isPhone\");\r\n  //   };\r\n  // }, []);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      PaperComponent={PaperComponent}\r\n      maxWidth={\"md\"}\r\n      fullWidth={true}\r\n    >\r\n      <div className={clsx(\"wrapperButton\", !loading && \"hidden\")}>\r\n        <CircularProgress className=\"buttonProgress\" size={24} />\r\n      </div>\r\n\r\n      <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n        <span className=\"mb-20 styleColor\">\r\n          {\" \"}\r\n          {(id ? t(\"general.update\") : t(\"Add\")) +\r\n            \" \" +\r\n            t(\"user.title_Employees\")}{\" \"}\r\n        </span>\r\n\r\n        <IconButton\r\n          style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n          onClick={() => handleClose()}\r\n        >\r\n          <Icon color=\"error\" title={t(\"close\")}>\r\n            close\r\n          </Icon>\r\n        </IconButton>\r\n      </DialogTitle>\r\n\r\n      <ValidatorForm\r\n        // ref=\"form\"\r\n        onSubmit={handleClose()}\r\n        style={{\r\n          overflowY: \"auto\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <DialogContent dividers>\r\n          <Grid className=\"mb-16\" container spacing={1}>\r\n            {/* name */}\r\n            <Grid item lg={4} md={4} sm={4} xs={12}>\r\n              <TextValidator\r\n                className=\"w-100 mb-16\"\r\n                label={\r\n                  <span className=\"font\">\r\n                    <span style={{ color: \"red\" }}> * </span>\r\n                    {t(\"user.displayName\")}\r\n                  </span>\r\n                }\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name ? name : \"\"}\r\n                onChange={(e) => setName(e.target.value)}\r\n                validators={[\"required\", \"isName\"]}\r\n                errorMessages={[\r\n                  t(\"general.errorMessages_required\"),\r\n                  \"Họ và tên ít nhất 6 ký tự\",\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n\r\n            {/* age */}\r\n            <Grid item lg={4} md={4} sm={4} xs={12}>\r\n              <TextValidator\r\n                className=\"w-100 mb-16\"\r\n                label={\r\n                  <span className=\"font\">\r\n                    <span style={{ color: \"red\" }}> * </span>\r\n                    {t(\"user.age\")}\r\n                  </span>\r\n                }\r\n                type=\"number\"\r\n                name=\"age\"\r\n                value={age ? age : \"\"}\r\n                onChange={(e) => setAge(e.target.value)}\r\n                validators={[\"required\", \"isAge\"]}\r\n                errorMessages={[\r\n                  t(\"general.errorMessages_required\"),\r\n                  \"Không trong độ tuổi lao động\",\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n\r\n            {/* email */}\r\n            <Grid item lg={4} md={4} sm={4} xs={12}>\r\n              <TextValidator\r\n                className=\"w-100 mb-16\"\r\n                label={\r\n                  <span className=\"font\">\r\n                    <span style={{ color: \"red\" }}> * </span>\r\n                    {t(\"Email\")}\r\n                  </span>\r\n                }\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email ? email : \"\"}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                validators={[\"required\", \"isEmail\"]}\r\n                errorMessages={[\r\n                  t(\"general.errorMessages_required\"),\r\n                  t(\"general.errorMessages_email_valid\"),\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n\r\n            {/* code */}\r\n            <Grid item lg={4} md={4} sm={4} xs={12}>\r\n              <TextValidator\r\n                className=\"w-100 mb-16\"\r\n                label={\r\n                  <span className=\"font\">\r\n                    <span style={{ color: \"red\" }}> * </span>\r\n                    {t(\"user.code\")}\r\n                  </span>\r\n                }\r\n                type=\"text\"\r\n                name=\"code\"\r\n                value={code ? code : \"\"}\r\n                onChange={(e) => setCode(e.target.value)}\r\n                validators={[\"required\", \"isCode\"]}\r\n                errorMessages={[\r\n                  t(\"general.errorMessages_required\"),\r\n                  \"Code phải đủ 6-10 ký tự\",\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n\r\n            {/* phone */}\r\n            <Grid item lg={4} md={4} sm={4} xs={12}>\r\n              <TextValidator\r\n                className=\"w-100 mb-16\"\r\n                label={\r\n                  <span className=\"font\">\r\n                    <span style={{ color: \"red\" }}> * </span>\r\n                    {t(\"user.phone\")}\r\n                  </span>\r\n                }\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                value={phone ? phone : \"\"}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                validators={[\"required\", \"isPhone\"]}\r\n                errorMessages={[\r\n                  t(\"general.errorMessages_required\"),\r\n                  \"Nhập đúng định dạng sđt\",\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n\r\n            {/* province */}\r\n            <Grid item lg={4} md={4} sm={4} xs={12}>\r\n              <FormControl\r\n                className=\"mb-16\"\r\n                fullWidth={true}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              >\r\n                <InputLabel htmlFor=\"province-simple\">\r\n                  {<span className=\"font\">{t(\"user.province\")}</span>}\r\n                </InputLabel>\r\n                <Select\r\n                  value={\r\n                    JSON.stringify(address.province) === JSON.stringify({})\r\n                      ? null\r\n                      : address.province\r\n                  }\r\n                  onChange={(e) => (handleClose)}\r\n                  inputProps={{\r\n                    name: \"province\",\r\n                    id: \"province-simple\",\r\n                  }}\r\n                >\r\n                  {listProvince.map((province) => {\r\n                    return (\r\n                      <MenuItem key={province.id} value={province}>\r\n                        {province.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* district */}\r\n            <Grid item lg={4} md={4} sm={4} xs={12}>\r\n              <FormControl\r\n                className=\"mb-16\"\r\n                fullWidth={true}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              >\r\n                <InputLabel htmlFor=\"district-simple\">\r\n                  {<span className=\"font\">{t(\"user.district\")}</span>}\r\n                </InputLabel>\r\n                <Select\r\n                  value={\r\n                    JSON.stringify(address.district) === JSON.stringify({})\r\n                      ? null\r\n                      : address.district\r\n                  }\r\n                  onChange={(e) => handleClose}\r\n                  onOpen={handleClose}\r\n                  inputProps={{\r\n                    name: \"district\",\r\n                    id: \"district-simple\",\r\n                  }}\r\n                >\r\n                  {address.districtsByProvince.map((district) => {\r\n                    return (\r\n                      <MenuItem key={district.id} value={district}>\r\n                        {district.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* commune */}\r\n            <Grid item lg={4} md={4} sm={4} xs={12}>\r\n              <FormControl fullWidth={true} variant=\"outlined\" size=\"small\">\r\n                <InputLabel htmlFor=\"commune-simple\">\r\n                  {<span className=\"font\">{t(\"user.commune\")}</span>}\r\n                </InputLabel>\r\n                <Select\r\n                  value={\r\n                    JSON.stringify(address.commune) === JSON.stringify({})\r\n                      ? null\r\n                      : address.commune\r\n                  }\r\n                  onChange={(e) => handleClose}\r\n                  onOpen={handleClose}\r\n                  inputProps={{\r\n                    name: \"commune\",\r\n                    id: \"commune-simple\",\r\n                  }}\r\n                >\r\n                  {address.communesByDistrict.map((commune) => {\r\n                    return (\r\n                      <MenuItem key={commune.id} value={commune}>\r\n                        {commune.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n\r\n        <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => handleClose()}\r\n          >\r\n            {t(\"Cancel\")}\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            disabled={loading}\r\n          >\r\n            {t(\"Save\")}\r\n          </Button>\r\n        </DialogActions>\r\n      </ValidatorForm>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default EmployeesEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}