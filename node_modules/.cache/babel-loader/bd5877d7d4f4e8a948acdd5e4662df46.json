{"ast":null,"code":"// import React, { Component } from \"react\";\n// import { NavLink } from \"react-router-dom\";\n// import { Icon } from \"@material-ui/core\";\n// import TouchRipple from \"@material-ui/core/ButtonBase\";\n// import EgretVerticalNavExpansionPanel from \"./EgretVerticalNavExpansionPanel\";\n// import { withStyles } from \"@material-ui/styles\";\n// import { useTranslation, withTranslation, Trans } from \"react-i18next\";\n// import ConstantList from \"../../../app/appConfig.js\";\n// const ViewEgretVerticalNavExpansionPanel = withTranslation()(\n//   EgretVerticalNavExpansionPanel\n// );\n// const styles = theme => ({\n//   expandIcon: {\n//     transition: \"transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms\",\n//     transform: \"rotate(90deg)\"\n//   },\n//   collapseIcon: {\n//     transition: \"transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms\",\n//     transform: \"rotate(0deg)\"\n//   }\n// });\n// class EgretVerticalNav extends Component {\n//   state = {\n//     collapsed: true\n//   };\n//   renderLevels = data => {\n//     const { t, i18n, classes } = this.props;\n//     return data.map((item, index) => {\n//       if (\n//         item.path && item.path.length > 0 &&\n//         !item.path.startsWith(ConstantList.ROOT_PATH)\n//       ) {\n//         item.path = ConstantList.ROOT_PATH + item.path;\n//       }\n//       let visible = item.isVisible;\n//       if (item.children && item.children.length > 0) {\n//         return (\n//           <ViewEgretVerticalNavExpansionPanel item={item} key={index}>\n//             {this.renderLevels(item.children)}\n//           </ViewEgretVerticalNavExpansionPanel>\n//         );\n//       } else if (visible) {\n//         if (item.path == null) {\n//           item.path = \"\";\n//         }\n//         return (\n//           <NavLink key={index} to={item.path} className=\"nav-item\">\n//             <TouchRipple key={item.name} name=\"child\" className=\"w-100\">\n//               {(() => {\n//                 if (item.icon) {\n//                   return (\n//                     <Icon className=\"item-icon text-middle\">{item.icon}</Icon>\n//                   );\n//                 } else {\n//                   return (\n//                     <span className=\"item-icon icon-text\">{item.iconText}</span>\n//                   );\n//                 }\n//               })()}\n//               <span className=\"text-middle pl-20 item-text\">\n//                 {t(item.name)}\n//               </span>\n//               <div className=\"mx-auto\"></div>\n//               {item.badge && (\n//                 <div className={`badge bg-${item.badge.color}`}>\n//                   {item.badge.value}\n//                 </div>\n//               )}\n//             </TouchRipple>\n//           </NavLink>\n//         );\n//       }\n//     });\n//   };\n//   handleClick = () => {\n//     this.setState({ collapsed: !this.state.collapsed });\n//   };\n//   render() {\n//     return (\n//       <div className=\"navigation\">\n//         {this.renderLevels(this.props.navigation)}\n//       </div>\n//     );\n//   }\n// }\n// export default withStyles(styles)(EgretVerticalNav);","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/ThucTap/client/src/egret/components/EgretVerticalNav/EgretVerticalNav.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from \"react\";\r\n// import { NavLink } from \"react-router-dom\";\r\n// import { Icon } from \"@material-ui/core\";\r\n// import TouchRipple from \"@material-ui/core/ButtonBase\";\r\n// import EgretVerticalNavExpansionPanel from \"./EgretVerticalNavExpansionPanel\";\r\n// import { withStyles } from \"@material-ui/styles\";\r\n// import { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\n// import ConstantList from \"../../../app/appConfig.js\";\r\n// const ViewEgretVerticalNavExpansionPanel = withTranslation()(\r\n//   EgretVerticalNavExpansionPanel\r\n// );\r\n// const styles = theme => ({\r\n//   expandIcon: {\r\n//     transition: \"transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms\",\r\n//     transform: \"rotate(90deg)\"\r\n//   },\r\n//   collapseIcon: {\r\n//     transition: \"transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms\",\r\n//     transform: \"rotate(0deg)\"\r\n//   }\r\n// });\r\n\r\n// class EgretVerticalNav extends Component {\r\n//   state = {\r\n//     collapsed: true\r\n//   };\r\n\r\n//   renderLevels = data => {\r\n//     const { t, i18n, classes } = this.props;\r\n//     return data.map((item, index) => {\r\n//       if (\r\n//         item.path && item.path.length > 0 &&\r\n//         !item.path.startsWith(ConstantList.ROOT_PATH)\r\n//       ) {\r\n//         item.path = ConstantList.ROOT_PATH + item.path;\r\n//       }\r\n//       let visible = item.isVisible;\r\n//       if (item.children && item.children.length > 0) {\r\n//         return (\r\n//           <ViewEgretVerticalNavExpansionPanel item={item} key={index}>\r\n//             {this.renderLevels(item.children)}\r\n//           </ViewEgretVerticalNavExpansionPanel>\r\n//         );\r\n//       } else if (visible) {\r\n//         if (item.path == null) {\r\n//           item.path = \"\";\r\n//         }\r\n//         return (\r\n//           <NavLink key={index} to={item.path} className=\"nav-item\">\r\n//             <TouchRipple key={item.name} name=\"child\" className=\"w-100\">\r\n//               {(() => {\r\n//                 if (item.icon) {\r\n//                   return (\r\n//                     <Icon className=\"item-icon text-middle\">{item.icon}</Icon>\r\n//                   );\r\n//                 } else {\r\n//                   return (\r\n//                     <span className=\"item-icon icon-text\">{item.iconText}</span>\r\n//                   );\r\n//                 }\r\n//               })()}\r\n//               <span className=\"text-middle pl-20 item-text\">\r\n//                 {t(item.name)}\r\n//               </span>\r\n//               <div className=\"mx-auto\"></div>\r\n//               {item.badge && (\r\n//                 <div className={`badge bg-${item.badge.color}`}>\r\n//                   {item.badge.value}\r\n//                 </div>\r\n//               )}\r\n//             </TouchRipple>\r\n//           </NavLink>\r\n//         );\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   handleClick = () => {\r\n//     this.setState({ collapsed: !this.state.collapsed });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"navigation\">\r\n//         {this.renderLevels(this.props.navigation)}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default withStyles(styles)(EgretVerticalNav);\r\n"]},"metadata":{},"sourceType":"module"}