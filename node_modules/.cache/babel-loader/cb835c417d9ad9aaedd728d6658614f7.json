{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\L0-old\\\\src\\\\app\\\\views\\\\Employees\\\\index.jsx\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport { Grid, InputLabel, FormControl, MenuItem, Select } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nexport default function ResponsiveDialog(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var theme = useTheme();\n  var fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var t = props.t,\n      item = props.item;\n\n  var _useState = useState(item === null || item === void 0 ? void 0 : item.name),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(item === null || item === void 0 ? void 0 : item.age),\n      _useState4 = _slicedToArray(_useState3, 2),\n      age = _useState4[0],\n      setAge = _useState4[1];\n\n  var _useState5 = useState(item === null || item === void 0 ? void 0 : item.email),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(item === null || item === void 0 ? void 0 : item.code),\n      _useState8 = _slicedToArray(_useState7, 2),\n      code = _useState8[0],\n      setCode = _useState8[1];\n\n  var _useState9 = useState(item === null || item === void 0 ? void 0 : item.phone),\n      _useState10 = _slicedToArray(_useState9, 2),\n      phone = _useState10[0],\n      setPhone = _useState10[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Open responsive dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Use Google's location service?\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"mb-16\",\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \" * \"), \"user.displayName\"),\n    type: \"text\",\n    name: \"name\",\n    value: name ? name : \"\",\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    validators: [\"required\", \"isName\"],\n    errorMessages: [\"general.errorMessages_required\", \"Họ và tên ít nhất 6 ký tự\"],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \" * \"), \"user.age\"),\n    type: \"number\",\n    name: \"age\",\n    value: age ? age : \"\",\n    onChange: function onChange(e) {\n      return setAge(e.target.value);\n    },\n    validators: [\"required\", \"isAge\"],\n    errorMessages: [\"general.errorMessages_required\", \"Không trong độ tuổi lao động\"],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \" * \"), t(\"Email\")),\n    type: \"email\",\n    name: \"email\",\n    value: email ? email : \"\",\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    validators: [\"required\", \"isEmail\"],\n    errorMessages: [t(\"general.errorMessages_required\"), t(\"general.errorMessages_email_valid\")],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, \" * \"), t(\"user.code\")),\n    type: \"text\",\n    name: \"code\",\n    value: code ? code : \"\",\n    onChange: function onChange(e) {\n      return setCode(e.target.value);\n    },\n    validators: [\"required\", \"isCode\"],\n    errorMessages: [t(\"general.errorMessages_required\"), \"Code phải đủ 6-10 ký tự\"],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, \" * \"), t(\"user.phone\")),\n    type: \"tel\",\n    name: \"phone\",\n    value: phone ? phone : \"\",\n    onChange: function onChange(e) {\n      return setPhone(e.target.value);\n    },\n    validators: [\"required\", \"isPhone\"],\n    errorMessages: [t(\"general.errorMessages_required\"), \"Nhập đúng định dạng sđt\"],\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"Disagree\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \"Agree\"))));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/L0-old/src/app/views/Employees/index.jsx"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","useState","Grid","InputLabel","FormControl","MenuItem","Select","ValidatorForm","TextValidator","ResponsiveDialog","props","open","setOpen","theme","fullScreen","breakpoints","down","handleClickOpen","handleClose","t","item","name","setName","age","setAge","email","setEmail","code","setCode","phone","setPhone","color","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nexport default function ResponsiveDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const { t, item } = props;\r\n  const [name, setName] = useState(item?.name);\r\n  const [age, setAge] = useState(item?.age);\r\n  const [email, setEmail] = useState(item?.email);\r\n  const [code, setCode] = useState(item?.code);\r\n  const [phone, setPhone] = useState(item?.phone);\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open responsive dialog\r\n      </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid className=\"mb-16\" container spacing={1}>\r\n            {/* name */}\r\n            <Grid item lg={4} md={4} sm={4} xs={12}>\r\n              <TextValidator\r\n                className=\"w-100 mb-16\"\r\n                label={\r\n                  <span className=\"font\">\r\n                    <span style={{ color: \"red\" }}> * </span>\r\n                    {(\"user.displayName\")}\r\n                  </span>\r\n                }\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name ? name : \"\"}\r\n                onChange={(e) => setName(e.target.value)}\r\n                validators={[\"required\", \"isName\"]}\r\n                errorMessages={[\r\n                  (\"general.errorMessages_required\"),\r\n                  \"Họ và tên ít nhất 6 ký tự\",\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n\r\n            {/* age */}\r\n            <Grid item lg={4} md={4} sm={4} xs={12}>\r\n              <TextValidator\r\n                className=\"w-100 mb-16\"\r\n                label={\r\n                  <span className=\"font\">\r\n                    <span style={{ color: \"red\" }}> * </span>\r\n                    {(\"user.age\")}\r\n                  </span>\r\n                }\r\n                type=\"number\"\r\n                name=\"age\"\r\n                value={age ? age : \"\"}\r\n                onChange={(e) => setAge(e.target.value)}\r\n                validators={[\"required\", \"isAge\"]}\r\n                errorMessages={[\r\n                  (\"general.errorMessages_required\"),\r\n                  \"Không trong độ tuổi lao động\",\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n\r\n            {/* email */}\r\n            <Grid item lg={4} md={4} sm={4} xs={12}>\r\n              <TextValidator\r\n                className=\"w-100 mb-16\"\r\n                label={\r\n                  <span className=\"font\">\r\n                    <span style={{ color: \"red\" }}> * </span>\r\n                    {t(\"Email\")}\r\n                  </span>\r\n                }\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email ? email : \"\"}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                validators={[\"required\", \"isEmail\"]}\r\n                errorMessages={[\r\n                  t(\"general.errorMessages_required\"),\r\n                  t(\"general.errorMessages_email_valid\"),\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n\r\n            {/* code */}\r\n            <Grid item lg={4} md={4} sm={4} xs={12}>\r\n              <TextValidator\r\n                className=\"w-100 mb-16\"\r\n                label={\r\n                  <span className=\"font\">\r\n                    <span style={{ color: \"red\" }}> * </span>\r\n                    {t(\"user.code\")}\r\n                  </span>\r\n                }\r\n                type=\"text\"\r\n                name=\"code\"\r\n                value={code ? code : \"\"}\r\n                onChange={(e) => setCode(e.target.value)}\r\n                validators={[\"required\", \"isCode\"]}\r\n                errorMessages={[\r\n                  t(\"general.errorMessages_required\"),\r\n                  \"Code phải đủ 6-10 ký tự\",\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n\r\n            {/* phone */}\r\n            <Grid item lg={4} md={4} sm={4} xs={12}>\r\n              <TextValidator\r\n                className=\"w-100 mb-16\"\r\n                label={\r\n                  <span className=\"font\">\r\n                    <span style={{ color: \"red\" }}> * </span>\r\n                    {t(\"user.phone\")}\r\n                  </span>\r\n                }\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                value={phone ? phone : \"\"}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                validators={[\"required\", \"isPhone\"]}\r\n                errorMessages={[\r\n                  t(\"general.errorMessages_required\"),\r\n                  \"Nhập đúng định dạng sđt\",\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}